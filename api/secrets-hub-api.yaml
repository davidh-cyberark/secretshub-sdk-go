openapi: 3.0.2
servers:
  - url: https://{tenant_url}
    description: CyberArk Secrets Hub API endpoint
    variables:
      tenant_url:
        default: example.secretshub.cyberark.cloud
info:
  version: 0.1.16
  title: Secrets Hub APIs
  description: "CyberArk Secrets Hub APIs allow you to manage secret stores, secrets, and sync policies."
  termsOfService: 'https://cyberark.com/terms/'
  contact:
    name: CyberArk contact
    email: info@cyberark.com
    url: 'https://cyberark.com/contact'
  license:
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
    name: Apache 2.0
  x-logo:
    url: 'https://www.cyberark.com/wp-content/uploads/2021/01/cyberark-logo-dark.svg'
paths:
  '/api/secret-stores/{storeId}':
    get:
      tags:
        - Secret stores
      summary: Get a Secret Store
      description: "Get a specific secret store by a unique identifier.\r\n> **Note:**  \r\n> Semicolons (;) are not supported in query parameters for `GET` requests.\r\n\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Get_a_Secret_Store_api_secret_stores__storeId__get
      parameters:
        - name: storeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SecretStoreIdString'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStoreWithReplicatedDataOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Secret stores
      summary: Delete Secret Store
      description: "Delete a secret store from Secrets Hub.\r\n> **Note:** If there are linked policies to this secret store, you must first delete the policies.\r\n>\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```\r\n\r\n"
      operationId: Delete_Secret_store_api_secret_stores__storeId__delete
      parameters:
        - name: storeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SecretStoreIdString'
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
    patch:
      tags:
        - Secret stores
      summary: Update Secret Store
      description: "Update a secret store.\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Update_Secret_Store_api_secret_stores__storeId__patch
      parameters:
        - name: storeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SecretStoreIdString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Request Object
              allOf:
                - $ref: '#/components/schemas/EditSecretStoreInputApi'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStoreOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  /api/secret-stores:
    get:
      tags:
        - Secret stores
      summary: Get all Secret Stores
      description: "| Filter              | How to use                                                                                                                                                       |\r\n|---------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| **type**            | Filter secret store by type.<br><br>**Valid values:** **AWS_ASM**, **AZURE_AKV**, or **GCP_GSM**.<br>For example:<br>`GET https://<sub domain>.secretshub.cyberark.cloud/api/secret-store?filter=type EQ AWS_ASM` |\r\n| **data.accountId**   | Filter only the AWS targets defined under the same AWS account ID.<br><br>For example:<br>`GET https://<sub domain>.secretshub.cyberark.cloud/api/secret-store?filter=data.accountId EQ 123456789100`         |\r\n| **data.azureVaultUrl** | Filter only the Microsoft Azure targets defined for a specific Azure Key Vault.<br><br>For example:<br>`GET https://<sub domain>.secretshub.cyberark.cloud/api/secret-store?filter=data.azureVaultUrl EQ https://myVault.vault.azure.net/` |\r\n| **data.appClientId** | Filter only the Azure secret stores with the same Azure app registration ID.<br><br>For example:<br>`GET https://<sub domain>.secretshub.cyberark.cloud/api/secret-stores?filter=data.appClientId EQ MyAzureAppID` |\r\n\r\n> **Note:**  \r\n> Semicolons (;) are not supported in query parameters for `GET` requests.\r\n\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```\r\n"
      operationId: List_All_Secret_Stores_api_secret_stores_get
      parameters:
        - name: behavior
          in: query
          description: Filter by secret store type. Retrieve only source/target secret stores.
          required: true
          schema:
            type: string
            enum:
              - SECRETS_TARGET
              - SECRETS_SOURCE
            title: Behavior
            description: Filter the secret stores for only target/source secret stores.
            example: SECRETS_TARGET
          examples:
            default:
              value: SECRETS_TARGET
        - name: filter
          in: query
          description: Filter the secret stores by filter condition expression.
          required: false
          schema:
            type: string
            title: Filter
            description: Filter the secret stores by filter condition expression.
            maxLength: 2000
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStoresWithReplicatedDataOutputList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
    post:
      tags:
        - Secret stores
      summary: Create Secret Store
      description: "In Secrets Hub, a **secret store** is a representation of the object that stores your secrets.\r\n\r\n| Secret store | Description                                                                                                                                         |\r\n|--------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| **Target**   | The target for the secrets, either where the secrets are scanned or where the secrets are syncing to.<br><br>**Supported secret stores:**<br>- **AWS_ASM** (AWS Secrets Manager)<br>- **AZURE_AKV** (Azure Key Vault)<br>- **GCP_GSM** (Google Cloud Secret Manager) |\r\n| **Source**   | The source of the secrets, meaning where the secrets are syncing from.<br><br>**Supported source secret stores:** **PAM_PCLOUD**, **PAM_SELF_HOSTED** |\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```\r\n"
      operationId: Create_Secret_Store_api_secret_stores_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Request Object
              allOf:
                - $ref: '#/components/schemas/SecretStoreInput'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStoreOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  '/api/secret-stores/{storeId}/status/connection':
    get:
      tags:
        - Secret stores
      summary: Get Connection Status of Secret Store
      description: "Get the connection status of a specific secret store.\r\n> **Note:**  \r\n> Semicolons (;) are not supported in query parameters for `GET` requests.\r\n\r\n\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Get_the_connection_status_of_a_secret_store_api_secret_stores__storeId__status_connection_get
      parameters:
        - name: storeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SecretStoreIdString'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsTestOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  '/api/secret-stores/{storeId}/state':
    put:
      tags:
        - Secret stores
      summary: Set Secret Store State
      description: |-
        Enable or disable a Secret Store.
         
        **The base URL for all Secrets Hub REST APIs:**
        ```json
        https://<sub domain>.secretshub.cyberark.cloud/
        ```
      operationId: put-api-secret-stores-storeId-state
      parameters:
        - name: storeId
          in: path
          required: true
          schema:
            type: string
            pattern: 'store-[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
            minLength: 42
            maxLength: 42
            example: store-5a05468b-fa58-4bcf-84e9-62ede8af55f4
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                    - enable
                    - disable
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  /api/secret-stores/states:
    put:
      tags:
        - Secret stores
      summary: Set state for multiple secret stores
      description: |-
        Enable or disable multiple secret stores.

        **The base URL for all Secrets Hub REST APIs:**
        ```json
        https://<sub domain>.secretshub.cyberark.cloud/
        ```
      operationId: put-api-secret-stores-state
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                    - enable
                    - disable
                secretStoreIds:
                  type: array
                  minItems: 1
                  maxItems: 500
                  items:
                    $ref: '#/components/schemas/SecretStoreIdString'
                  nullable: false
              required:
                - action
                - secretStoreIds
            examples:
              Example 1:
                value:
                  action: enable
                  secretStoreIds:
                    - store-9b081c16-68e9-4b97-8fcb-07893bae2a80
                    - store-fc9636c3-6892-4380-8610-d44dab51da9c
      responses:
        '207':
          description: Multi-Status (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    minItems: 1
                    maxItems: 500
                    items:
                      type: object
                      properties:
                        secretStoreId:
                          $ref: '#/components/schemas/SecretStoreIdString'
                        result:
                          type: string
                          enum:
                            - SUCCESS
                            - FAILED
                        errorMessage:
                          type: string
                    nullable: false
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  /api/secrets:
    get:
      tags:
        - Secrets
      summary: Get Secrets
      description: "View all the scanned secrets.\r\n\r\n<!-- theme: warning -->\r\n> #### Important\r\n>\r\n>The REST APIs in this topic are a Beta version. To run them, add the following request Accept header to each API call: <br>\r\n> ```json\r\n> application/x.secretshub.beta+json\r\n>\r\n\r\n> **Note:**  \r\n> Semicolons (;) are not supported in query parameters for `GET` requests.\r\n\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```\r\n\r\n\r\n## Filter options\r\n\r\nThe following table lists the filter expressions that can be used in the `filter` query parameter.\r\n\r\n> **Note:**\r\n> - All values are case-insensitive.\r\n> - All conditions can be grouped together with the `AND` logical operator.\r\n> - Filters need to be formatted as specified in [Secret Hub query language](docs/Secrets-Hub-query-language.md).\r\n\r\n| Field                            | Description                                                                                  | Example                                                                                                     |\r\n|----------------------------------|----------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------|\r\n| `name`                            | Valid operator on field: `CONTAINS`                                                         | `https://url/api?filter=name CONTAINS \"my value\"`                                                           |\r\n| `storeName`                       | Valid operator on field: `CONTAINS`                                                         | `https://url/api?filter=storeName CONTAINS value`                                                           |\r\n| `vendorType`                      | Valid operator on field: `EQ`                                                               | `https://url/api?filter=vendorType EQ AWS`                                                                  |\r\n| `storeId`                         | Valid operator on field: `CONTAINS`                                                         | `https://url/api?filter=storeId CONTAINS store-ab412`                                                       |\r\n| `originId`                        | Valid operator on field: `CONTAINS`                                                         | `https://url/api?filter=originId CONTAINS org-id`                                                           |\r\n| `discoveredAt`                    | Valid operator on field: `GE`,`LE`                                                          | `https://url/api?filter=discoveredAt GE \"2021-09-03T12:42:07.105000Z\"`                                      |      \r\n| `syncedByCyberArk`                | Valid operator on field: `EQ`                                                               | `https://url/api?filter=syncedByCyberArk EQ true`                                                           |\r\n| `onboarded`                       | Valid operator on field: `EQ`                                                               | `https://url/api?filter=onboarded EQ true`                                                                  |\r\n| `vendorData.region`               | Valid operator on field: `EQ`                                                               | `https://url/api?filter=vendorData.region EQ us-east-1`                                                     |\r\n| `vendorData.tags.key`             | Valid operators on field: `CONTAINS`, `NOTCONTAINS`                                         | `https://url/api?filter=vendorData.tags.key NOTCONTAINS 'some key'`                                         |\r\n| `vendorData.tags.value`           | Valid operators on field: `CONTAINS`, `NOTCONTAINS`                                         | `https://url/api?filter=vendorData.tags.value CONTAINS 'some key'`                                          |\r\n| `vendorData.awsAccountId`         | Valid operator on field: `CONTAINS`                                                         | `https://url/api?filter=vendorData.awsAccountId CONTAINS 12345678`                                          |\r\n| `vendorData.azureSubscriptionId`  | Valid operator on field: `CONTAINS`                                                         | `https://url/api?filter=vendorData.azureSubscriptionId CONTAINS a2bd35`                                     |\r\n| `vendorData.azureSubscriptionName`| Valid operator on field: `CONTAINS`                                                         | `https://url/api?filter=vendorData.azureSubscriptionName CONTAINS sub-name`                                 |\r\n| `vendorData.resourceGroupName`    | Valid operator on field: `CONTAINS`                                                         | `https://url/api?filter=vendorData.resourceGroupName CONTAINS \"my-group-name\"`                              |\r\n| `vendorData.enabled`              | Valid operator on field: `EQ`                                                               | `https://url/api?filter=vendorData.enabled EQ \"true\"`                                                       |\r\n| `vendorData.expiresAt`            | Valid operator on field: `GE`,`LE`                                                          | `https://url/api?filter=vendorData.expiresAt GE \"2021-09-03T12:42:07.105000Z\"`                              |\r\n| `vendorData.projectName`          | Valid operator on field: `EQ`                                                               | `https://url/api?filter=vendorData.projectName EQ \"my-project\"`                                             |\r\n| `vendorData.replicas`             | Valid operator on field: `CONTAINS`                                                         | `https://url/api?filter=vendorData.replicas CONTAINS \"europe-west\"`                                         |\r\n| `vendorData.secretType`           | Valid operator on field: `EQ`                                                               | `https://url/api?filter=vendorData.secretType EQ \"GLOBAL\"`                                                  |\r\n| `vendorData.secretEnabledVersions`| Valid operator on field: `GE`,`LE`                                                          | `https://url/api?filter=vendorData.secretEnabledVersions GE 1`                                              |\r\n**Limitations on values**: Details about value limitations can be found on the respective object pages.\r\n"
      operationId: List_secrets_api_secrets_get
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            title: Accept
            example: application/x.secretshub.beta+json
          examples:
            default:
              value: application/x.secretshub.beta+json
        - name: projection
          in: query
          description: Data representation method. Can be EXTEND or REGULAR.
          required: false
          schema:
            type: string
            title: Projection
            description: Data representation method. Can be EXTEND or REGULAR.
            maxLength: 100
            example: EXTEND
          examples:
            default:
              value: EXTEND
        - name: offset
          in: query
          description: The number of secrets to skip before starting to collect the result set. Can be used only once in a REST API call
          schema:
            type: integer
            minimum: 0
            maximum: 150000
            default: 0
            example: 50
        - name: limit
          in: query
          description: The number of secrets to return. Can be used only once in a REST API call
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
            example: 100
        - name: sort
          in: query
          description: 'The order by which to sort the results. By default, the results are sorted using field: storeName. The default order is ascending (ASC).'
          allowEmptyValue: false
          schema:
            type: string
            maxLength: 100
            default: storeName ASC
        - name: filter
          in: query
          description: Filter the returned data using one or more conditions.
          schema:
            type: string
            example: name CONTAINS "my value"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretListOutput'
#                title: Response List Secrets Api Secrets Get
#                anyOf:
#                  - $ref: '#/components/schemas/ExtendedSecretListOutput'
#                  - $ref: '#/components/schemas/RegularSecretListOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  /api/policies:
    get:
      tags:
        - Sync Policies
      summary: Get Policies
      description: "Retrieve sync policies. \r\n\r\nUse filters to retrieve a subset of sync policies. \r\nYou can use one filter per API call.\r\n\r\nFilter | How to use\r\n---------|----------\r\n **safeName**| Filter the sync policies by the Safe name.<br><br>For example:<br>`GET https://<sub domain>.secretshub.cyberark.cloud/api/policies?projection=EXTEND&filter=filter.safeName EQ MySafeName`\r\n **target.id** | Filter the sync policies that are syncing to a specific target secret store by its Secrets Hub ID.<br><br>For example:<br>`GET https://<sub domain>.secretshub.cyberark.cloud/api/policies?filter=target.id EQ store-cfd25162-f8a9-4d94-8d36-f46c4b60d651`\r\n> **Note:**  \r\n> Semicolons (;) are not supported in query parameters for `GET` requests.\r\n\r\n\r\n \r\n **The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```\r\n\r\n"
      operationId: List_Policies_api_policies_get
      parameters:
        - name: filter
          in: query
          description: 'Filter the Policies. For example, by Safe name'
          required: false
          schema:
            type: string
            title: Filter
            description: 'Filter the Policies. For example, by Safe name'
            example: filter.data.safeName EQ MySafeName
          examples:
            default:
              value: filter.data.safeName EQ MySafeName
        - name: projection
          in: query
          description: 'Data representation method. Can be EXTEND, REGULAR, METADATA. Default is REGULAR if param is not set.'
          required: false
          schema:
            type: string
            title: Projection
            description: 'Data representation method. Can be EXTEND, REGULAR, METADATA.'
            example: REGULAR
          examples:
            default:
              value: REGULAR
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyListOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
    post:
      tags:
        - Sync Policies
      summary: Create Sync Policy
      description: "A **sync policy** defines which secrets to sync from from the source secret store (PAM) to the target secret store ( AWS Secrets Manager, Azure Key Vault or GCP Secret Manager).\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Policy_create_api_policies_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Request Object
              allOf:
                - $ref: '#/components/schemas/PolicyInput'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRegularOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  '/api/policies/{policyId}/state':
    put:
      tags:
        - Sync Policies
      summary: Set Sync Policy State
      description: "Enable or disable a sync policy.\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Set_Policy_State_api_policies__policyId__state_put
      parameters:
        - name: policyId
          in: path
          description: unique identifier of the sync policy
          required: true
          schema:
            type: string
            title: Policyid
            description: unique identifier of the sync policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Request Object
              allOf:
                - $ref: '#/components/schemas/StateChangeInput'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  '/api/policies/{policyId}':
    get:
      tags:
        - Sync Policies
      summary: Get Sync Policy
      description: "Get a policy by its unique identifier.\r\n> **Note:**  \r\n> Semicolons (;) are not supported in query parameters for `GET` requests.\r\n\r\n\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Policy_get_api_policies__policyId__get
      parameters:
        - name: projection
          in: query
          description: Data representation method. Can be EXTEND or REGULAR.
          required: true
          schema:
            type: string
            title: Projection
            description: Data representation method. Can be EXTEND or REGULAR.
            example: REGULAR
          examples:
            default:
              value: REGULAR
        - name: policyId
          in: path
          description: unique identifier of the requested policy
          required: true
          schema:
            type: string
            title: Policyid
            description: unique identifier of the requested policy
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Policy Get Api Policy
                anyOf:
                  - $ref: '#/components/schemas/PolicyRegularOutput'
                  - $ref: '#/components/schemas/PolicyExtendedOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Sync Policies
      summary: Delete Sync Policy
      description: "Request to delete the referenced policy. \r\n> **Note:** Delete the filter of the policy after deleting the policy.\r\n\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Policy_delete_api_policies__policyId__delete
      parameters:
        - name: policyId
          in: path
          description: unique identifier of the referenced policy
          required: true
          schema:
            type: string
            title: Policyid
            description: unique identifier of the referenced policy
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePolicyOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  '/api/scan-definitions/{type}/{id}/scan':
    post:
      tags:
        - Scans
      summary: Trigger Scan
      description: "Trigger a scan on an AWS or Azure secret store. \r\n\r\n<!-- theme: warning -->\r\n> #### Important\r\n>\r\n>The REST APIs in this topic are a Beta version. To run them, add the following request Accept header to each API call: <br>\r\n> ```json\r\n> application/x.secretshub.beta+json\r\n> ```\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Trigger_scan_api_scan_definitions__type___id__scan_post
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            title: Accept
            example: application/x.secretshub.beta+json
          examples:
            default:
              value: application/x.secretshub.beta+json
        - name: id
          in: path
          description: The ID of the scan.
          required: true
          schema:
            type: string
            title: Id
            description: The ID of the scan.
            example: default
          examples:
            default:
              value: default
        - name: type
          in: path
          description: The type of scan.
          required: true
          schema:
            type: string
            title: Type
            description: The type of scan.
            example: secret-store
          examples:
            default:
              value: secret-store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Request Object
              allOf:
                - $ref: '#/components/schemas/TriggerScanInputBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerScanOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  /api/scans:
    get:
      tags:
        - Scans
      summary: Get Scans
      description: "Get all scans and track the scan status.\r\n\r\n<!-- theme: warning -->\r\n> #### Important\r\n>\r\n>The REST APIs in this topic are a Beta version. To run them, add the following request Accept header to each API call: <br>\r\n> ```json\r\n> application/x.secretshub.beta+json\r\n> ```\r\n\r\n> **Note:**  \r\n> Semicolons (;) are not supported in query parameters for `GET` requests.\r\n\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Get_scans_api_scans_get
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            title: Accept
            example: application/x.secretshub.beta+json
          examples:
            default:
              value: application/x.secretshub.beta+json
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanListOutput'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  /api/info:
    get:
      tags:
        - Service info
      summary: Service Info
      description: "Get information about your Secrets Hub service.\r\n\r\n> **Note:**  \r\n> Semicolons (;) are not supported in query parameters for `GET` requests.\r\n\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Secret_Store_info_api_info_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInfoOutput'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
      security:
        - bearerAuth: []
  /api/configuration:
    get:
      tags:
        - Configuration
      summary: View Configuration
      description: |-
        View Secrets Hub configuration

        **The base URL for all Secrets Hub REST APIs:**
        ```json
        https://<sub domain>.secretshub.cyberark.cloud/
        ```
      operationId: get-api-configuration
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfigurationOutput'
              examples:
                Example 1:
                  value:
                    secretsSource:
                      pamType: PAM_SELF_HOSTED
                    authenticationIdentities:
                      aws:
                        tenantRoleArn: 'arn:aws:iam::123456789101:role/Secrets-Hub-Role-Name'
                    syncSettings:
                      secretValidity: 300
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
      x-internal: false
    patch:
      tags:
        - Configuration
      summary: Update Configuration
      description: |-
        Update Secrets Hub configuration, for example Azure secrets expiration.

        **The base URL for all Secrets Hub REST APIs:**
        ```json
        https://<sub domain>.secretshub.cyberark.cloud/
        ```
      operationId: patch-api-configuration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                syncSettings:
                  $ref: '#/components/schemas/Syncsettings'
            examples:
              Example 2:
                value:
                  syncSettings:
                    secretValidity: 300
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
      x-internal: false
  '/api/secret-stores/{storeId}/filters':
    get:
      tags:
        - Filters
      summary: Get all secrets filters
      description: "Get all the secrets filters related to a secret store source, by the secret store unique identifier.\r\n> **Note:**  \r\n> Semicolons (;) are not supported in query parameters for `GET` requests.\r\n\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: List_all_secrets_filters_api_secret_stores__storeId__filters_get
      parameters:
        - name: storeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SecretStoreIdString'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
    post:
      tags:
        - Filters
      summary: Create secrets filter
      description: "The **secrets filter** represents the object in the source secret store that contains the secrets that are synced. Currently, the only supported filter type is **PAM_SAFE**. Every sync policy should have its own secrets filter.\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Create_secrets_filter_api_secret_stores__storeId__filters_post
      parameters:
        - name: storeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SecretStoreIdString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Request Object
              allOf:
                - $ref: '#/components/schemas/FilterInput'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  '/api/secret-stores/{storeId}/filters/{filterId}':
    get:
      tags:
        - Filters
      summary: Get Secrets  Filter
      description: "Get a specific secrets filter by a unique identifier.\r\n> **Note:**  \r\n> Semicolons (;) are not supported in query parameters for `GET` requests.\r\n\r\n\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```"
      operationId: Get_a_secrets_filter_api_secret_stores__storeId__filters__filterId__get
      parameters:
        - name: filterId
          in: path
          description: The unique identifier of the secrets filter you want to retrieve.
          required: true
          schema:
            type: string
            title: Filterid
            description: The unique identifier of the secrets filter you want to retrieve.
        - name: storeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SecretStoreIdString'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Filters
      summary: Delete Secrets Filter
      description: "Delete a secrets filter from Secrets Hub. \r\n> **Note:** If there are linked policies to this secret store, you must first delete the policies.\r\n**The base URL for all Secrets Hub REST APIs:**\r\n```json\r\nhttps://<sub domain>.secretshub.cyberark.cloud/\r\n```\r\n"
      operationId: Delete_secrets_filter_api_secret_stores__storeId__filters__filterId__delete
      parameters:
        - name: filterId
          in: path
          description: The unique identifier of the secrets filter you want to delete.
          required: true
          schema:
            type: string
            title: Filterid
            description: The unique identifier of the secrets filter you want to delete.
        - name: storeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SecretStoreIdString'
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      description: A bearer token in the format of a JWS and conforms to the specifications included in RFC8725.
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SecretStoreIdString:
      type: string
      description: The unique identifier of the secret store
      pattern: 'store-[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
      minLength: 42
      maxLength: 42
      example: store-5a05468b-fa58-4bcf-84e9-62ede8af55f4
    SecretStoreWithReplicatedDataOutput:
      type: object
      title: SecretStoreWithReplicatedDataOutput
      discriminator:
        propertyName: type
        mapping:
          AWS_ASM: '#/components/schemas/AwsAsmData'
          AZURE_AKV: '#/components/schemas/AzureAkvData'
          GCP_GSM: '#/components/schemas/GcpGsmData'
          PAM_PCLOUD: '#/components/schemas/PcloudSecretStoreData'
          PAM_SELF_HOSTED: '#/components/schemas/SelfHostedSecretStoreData'
      properties:
        id:
          type: string
          title: Id
          description: The unique identifier of the secret store
          pattern: '^store-[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
          example: store-5a05468b-fa58-4bcf-84e9-62ede8af55f4
        type:
          description: The type of secret store.
          allOf:
            - $ref: '#/components/schemas/SecretStoreType'
          example: AWS_ASM
        behaviors:
          type: array
          description: Whether the secret store is used as a source or a target. There can be only one source secret store per tenant.
          items:
            $ref: '#/components/schemas/SecretStoreBehavior'
          example: SECRETS_TARGET
        createdAt:
          type: string
          title: Createdat
          description: The secret store creation date.
          example: '2023-07-06T15:43:48.103000'
        createdBy:
          type: string
          title: Createdby
          description: The user who created the secret store.
          minLength: 3
          maxLength: 128
          example: user@example.com
        data:
          title: Data
          description: The data of the secret store depends on the secret store type.
          oneOf:
            - $ref: '#/components/schemas/AwsAsmData'
            - $ref: '#/components/schemas/AzureAkvData'
            - $ref: '#/components/schemas/GcpGsmData'
            - $ref: '#/components/schemas/PcloudSecretStoreData'
            - $ref: '#/components/schemas/SelfHostedSecretStoreData'
        description:
          type: string
          title: Description
          description: A description of the secret store.
          pattern: '^[A-Za-z0-9-_,.();: ]*$'
          minLength: 1
          maxLength: 150
          example: AWS Secrets Manager for dev-team-prod
        name:
          type: string
          title: Name
          description: The secret store name.
          pattern: '^[A-Za-z0-9-_,.();: ]*$'
          minLength: 1
          maxLength: 200
          example: Account alias - us-east-1
        updatedAt:
          type: string
          title: Updatedat
          description: The last date the secret store was updated
          example: '2023-07-06T15:43:48.103000'
        updatedBy:
          type: string
          title: Updatedby
          description: The last user to update the secret store.
          minLength: 3
          maxLength: 128
          example: user@example.com
        creationDetails:
          type: string
          enum:
            - Secrets Hub
            - Connect Cloud Environment
        organizationId:
          type: string
          pattern: 'o-[a-z0-9]'
          minLength: 10
          maxLength: 32
        scan:
          $ref: '#/components/schemas/SecretStoreScanReplicaOutput'
        totalPoliciesCount:
          type: integer
          description: The total amount of policies in the secret store
          minimum: 0
          example: 1
        totalSecretsCount:
          type: integer
          description: The total amount of secrets in the secret store
          minimum: 0
          example: 1
      required:
        - id
        - type
        - behaviors
        - createdAt
        - createdBy
        - data
        - name
        - updatedAt
        - updatedBy
    SecretStoreType:
      type: string
      enum:
        - PAM_PCLOUD
        - PAM_SELF_HOSTED
        - AWS_ASM
        - AZURE_AKV
        - GCP_GSM
      title: SecretStoreType
      description: An enumeration.
      example: AWS_ASM
      x-examples: {}
    SecretStoreBehavior:
      type: string
      enum:
        - SECRETS_SOURCE
        - SECRETS_TARGET
      title: SecretStoreBehavior
      description: An enumeration.
    AwsAsmData:
      type: object
      title: AwsAsmData
      properties:
        accountAlias:
          type: string
          title: Accountalias
          description: The alias of your AWS account
          pattern: '[a-zA-Z0-9!"#$%&''()*+,-./:;<=>?@[\]^_``{|}~]'
          minLength: 3
          maxLength: 63
          example: alias-name-example
        accountId:
          type: string
          title: Accountid
          description: The 12-digit account ID of the AWS account that has the AWS Secrets Manager where you store secrets
          pattern: '[0-9]'
          minLength: 12
          maxLength: 12
          example: '123456789123'
        regionId:
          type: string
          title: Regionid
          description: The region ID where the AWS account is managed
          pattern: '[a-z0-9-]'
          minLength: 4
          maxLength: 22
          example: us-east-1
        roleName:
          type: string
          title: Rolename
          description: The AWS role used to allow Secrets Hub to manage secrets in your AWS Secrets Manager
          pattern: '[a-zA-Z0-9_+=,.@-]'
          minLength: 1
          maxLength: 64
          example: Secrets-Hub-IAM-Role-Name-Created-For-Secrets-Hub
      required:
        - accountAlias
        - accountId
        - regionId
        - roleName
    AzureAkvData:
      type: object
      title: AzureAkvData
      properties:
        appClientDirectoryId:
          type: string
          title: Appclientdirectoryid
          description: The Azure directory/tenant ID where the application (user) for Secrets Hub was created
          format: uuid
          minLength: 36
          maxLength: 36
          example: c389961d-a0cd-46ab-9f69-877f756a59c1
        azureVaultUrl:
          type: string
          title: Azurevaulturl
          description: The URI used to access and get secrets stored in Azure Key Vault
          pattern: 'https://[a-zA-Z0-9-]{3,24}.(vault.azure.net|vault.azure.cn|vault.usgovcloudapi.net|vault.microsoftazure.de)'
          minLength: 26
          maxLength: 57
          example: 'https://example.vault.azure.cn'
        appClientId:
          type: string
          title: Appclientid
          description: A unique Application (client) ID assigned to Secrets Hub by Azure AD when the app was registered. Secrets Hub will use this ID to access the Azure Key Vault
          format: uuid
          minLength: 36
          maxLength: 36
        connectionConfig:
          title: Connectionconfig
          description: The network access configuration set for your Azure Key Vault. Contact your Azure tenant admin to identify it
          anyOf:
            - $ref: '#/components/schemas/ConnectorConnectionConfig'
            - $ref: '#/components/schemas/PublicConnectionConfig'
        subscriptionId:
          type: string
          title: Subscriptionid
          description: The Azure subscription ID linked to the Azure Key Vault
          format: uuid
          minLength: 36
          maxLength: 36
          example: c389961d-a0cd-46ab-9f69-877f756a59c1
        subscriptionName:
          type: string
          title: Subscriptionname
          description: The Azure subscription name linked to the Azure Key Vault
          pattern: 'NOT[<>;|]'
          minLength: 1
          maxLength: 64
          example: subscription-name-example
        resourceGroupName:
          type: string
          title: Resourcegroupname
          description: The Azure resource group name where the Azure Key Vault is stored
          pattern: '[a-zA-Z0-9_.()-]'
          minLength: 1
          maxLength: 90
          example: Resource-Group-example
      required:
        - appClientDirectoryId
        - azureVaultUrl
        - appClientId
        - connectionConfig
    ConnectorConnectionConfig:
      type: object
      title: ConnectorConnectionConfig
      properties:
        connectionType:
          type: string
          enum:
            - CONNECTOR
          title: Connectiontype
          description: 'If your Azure Key Vault is not open to public access, choose CONNECTOR'
          default: CONNECTOR
        connectorId:
          $ref: '#/components/schemas/ConnectorId'
        Connectorpoolid:
          $ref: '#/components/schemas/ConnectorPoolId'
    ConnectorId:
      type: string
      title: Connectorid
      description: The connector unique identifier used to connect Azure Key Vault and Secrets Hub
      pattern: 'ManagementAgent_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
      minLength: 52
      maxLength: 52
      example: ManagementAgent_90c63827-7315-4284-8559-ac8d24f2666d
    ConnectorPoolId:
      type: string
      title: Connectorpoolid
      description: The connector pool unique identifier used to connect PAM Self-Hosted and Secrets Hub.
      format: uuid
      minLength: 36
      maxLength: 36
      example: c389961d-a0cd-46ab-9f69-877f756a59c1
    PublicConnectionConfig:
      type: object
      title: PublicConnectionConfig
      properties:
        connectionType:
          type: string
          enum:
            - PUBLIC
          title: Connectiontype
          description: 'If your Azure Key Vault is open to public access, choose ''PUBLIC'''
          default: PUBLIC
    GcpGsmData:
      type: object
      title: GcpGsmData
      properties:
        gcpProjectName:
          type: string
          title: Gcpprojectname
          description: The name of the GCP project where the GCP Secret Manager is stored
          pattern: '[a-zA-Z0-9''"! -]'
          minLength: 4
          maxLength: 30
          example: gcp-project-name-example
        gcpProjectNumber:
          type: string
          title: Gcpprojectnumber
          description: The number of the GCP project where the GCP Secret Manager is stored
          pattern: '[0-9]'
          maxLength: 18
          example: '123456789'
        gcpWorkloadIdentityPoolId:
          type: string
          title: Gcpworkloadidentitypoolid
          description: The GCP workload identity pool ID created for Secrets Hub to access the GCP Secret Manager
          pattern: '[a-z0-9-]'
          minLength: 4
          maxLength: 32
          example: gcp-pool-id-example
        gcpPoolProviderId:
          type: string
          title: Gcppoolproviderid
          description: The GCP pool provider ID created for Secrets Hub to access the GCP Secret Manager
          pattern: '[a-z0-9-]'
          minLength: 4
          maxLength: 32
          example: gcp-provider-id-example
        serviceAccountEmail:
          type: string
          title: Serviceaccountemail
          description: The service account email created for Secrets Hub to access the GCP Secret Manager
          pattern: '[a-z0-9-]{6,30}@[a-z0-9-]{6,30}.iam.gserviceaccount.com'
          minLength: 37
          maxLength: 86
          example: service-account@example.iam.gserviceaccount.com
        connectionConfig:
          title: Connectionconfig
          description: The network access configuration set for your GCP Secret Manager. Contact your GCP project admin to identify it
          allOf:
            - $ref: '#/components/schemas/PublicConnectionConfig'
      required:
        - gcpProjectName
        - gcpProjectNumber
        - gcpWorkloadIdentityPoolId
        - gcpPoolProviderId
        - serviceAccountEmail
        - connectionConfig
    PcloudSecretStoreData:
      type: object
      title: PcloudSecretStoreData
      properties:
        url:
          type: string
          title: Url
          description: The URL of your pCloud
          format: uri
          minLength: 1
          maxLength: 65536
        userName:
          type: string
          title: Username
          description: The user used for Secrets Hub to get secrets from PAM source. Should be 'SecretsHub'. This user should be created by REST API in PAM
      required:
        - url
        - userName
    SelfHostedSecretStoreData:
      type: object
      title: SelfHostedSecretStoreData
      properties:
        url:
          type: string
          title: Url
          description: 'The URL of your PAM Self-Hosted PVWA, or the load balancer for the PVWA'
          format: uri
          minLength: 1
          maxLength: 65536
        userName:
          type: string
          title: Username
          description: The user used for Secrets Hub to get secrets from PAM source. Should be 'SecretsHub'. This user should be created by REST API in PAM
        connectorId:
          $ref: '#/components/schemas/ConnectorId'
        Connectorpoolid:
          $ref: '#/components/schemas/ConnectorPoolId'
      required:
        - url
        - userName
    SecretStoreScanReplicaOutput:
      type: object
      title: SecretStoreScanReplicaOutput
      properties:
        id:
          type: string
          title: Id
          description: The unique identifier of the scan
          pattern: 'scan-[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
          example: scan-5a05468b-fa58-4bcf-84e9-62ede8af55f4
        status:
          description: The status of the scan.
          allOf:
            - $ref: '#/components/schemas/ScanStatus'
          example: SUCCESS
        message:
          type: string
          title: Message
          description: More information on the scan status.
          example: The scan was done successfully
        finishedAt:
          type: string
          title: Finishedat
          description: The date and time the scan ended
          example: '2023-07-06T15:45:00.103000'
      required:
        - id
        - status
    ScanStatus:
      type: string
      enum:
        - IN_PROGRESS
        - SUCCESS
        - FAILED
      title: ScanStatus
      description: An enumeration.
    ErrorResponse:
      type: object
      title: ErrorResponse
      properties:
        code:
          type: string
          title: Code
          description: An application-specific error code
          pattern: '^[A-Z]{1,6}\d{1,5}[A-Z]$'
          example: SSAS0000E
        description:
          type: string
          title: Description
          description: Optional additional details of the specific error
          example: Unexpected error occurred
        message:
          type: string
          title: Message
          description: A human-readable explanation specific to this occurrence of the problem
          minLength: 1
          example: Unexpected error
      required:
        - code
        - message
    EditSecretStoreInputApi:
      type: object
      title: EditSecretStoreInputApi
      properties:
        data:
          title: Data
          anyOf:
            - $ref: '#/components/schemas/EditAwsAsmData'
            - $ref: '#/components/schemas/EditAkvSecretStoreData'
            - $ref: '#/components/schemas/EditSelfHostedSecretStoreData'
            - $ref: '#/components/schemas/EditGsmSecretStoreData'
        description:
          type: string
          title: Description
          description: A description of the secret store.
          pattern: '[A-Za-z0-9-_,.();: ]'
          minLength: 1
          maxLength: 150
          example: secret store description example
        name:
          type: string
          title: Name
          description: The secret store name.
          pattern: '[a-zA-Z0-9!"#$%&''()*+,-./:;<=>?@[\]^_``{|}~]'
          minLength: 1
          maxLength: 200
          example: secret-store-name-example
    EditAwsAsmData:
      type: object
      title: EditAwsAsmData
      properties:
        accountAlias:
          type: string
          title: Accountalias
          description: The alias of your AWS account
          pattern: '[a-zA-Z0-9!"#$%&''()*+,-./:;<=>?@[\]^_``{|}~]'
          minLength: 3
          maxLength: 63
          example: account-alias-example
        roleName:
          type: string
          title: Rolename
          description: The AWS role used to allow Secrets Hub to manage secrets in your AWS Secrets Manager
          pattern: '[a-zA-Z0-9_+=,.@-]'
          minLength: 1
          maxLength: 64
          example: Secrets-Hub-IAM-Role-Name-Created-For-Secrets-Hub
    EditAkvSecretStoreData:
      type: object
      title: EditAkvSecretStoreData
      properties:
        appClientDirectoryId:
          type: string
          title: Appclientdirectoryid
          description: The Azure directory/tenant ID where the application (user) for Secrets Hub was created
          format: uuid
          minLength: 36
          maxLength: 36
          example: c389961d-a0cd-46ab-9f69-877f756a59c1
        appClientId:
          type: string
          title: Appclientid
          description: A unique Application (client) ID assigned to Secrets Hub by Azure AD when the app was registered. Secrets Hub will use this ID to access the Azure Key Vault
          format: uuid
          minLength: 36
          maxLength: 36
          example: c389961d-a0cd-46ab-9f69-877f756a59c1
        appClientSecret:
          type: string
          title: Appclientsecret
          description: The user's password that will be used by Secrets Hub to access the Azure Key Vault.
          minLength: 1
        connectionConfig:
          title: Connectionconfig
          description: The network access configuration set for your Azure Key Vault. Contact your Azure tenant admin to identify it
          oneOf:
            - $ref: '#/components/schemas/ConnectorConnectionConfig'
            - $ref: '#/components/schemas/PublicConnectionConfig'
#          discriminator:
#            propertyName: connectionType
#            mapping:
#              CONNECTOR: '#/components/schemas/ConnectorConnectionConfig'
#              PUBLIC: '#/components/schemas/PublicConnectionConfig'
        subscriptionId:
          type: string
          title: Subscriptionid
          description: The Azure subscription ID linked to the Azure Key Vault
          format: uuid
          minLength: 36
          maxLength: 36
          example: c389961d-a0cd-46ab-9f69-877f756a59c1
        subscriptionName:
          type: string
          title: Subscriptionname
          description: The Azure subscription name linked to the Azure Key Vault
          pattern: 'NOT[<>;|]'
          minLength: 1
          maxLength: 64
          example: subscription-name-example
        resourceGroupName:
          type: string
          title: Resourcegroupname
          description: The Azure resource group name where the Azure Key Vault is stored
          pattern: '[a-zA-Z0-9.()_-]'
          minLength: 1
          maxLength: 90
          example: resource-group-example
    EditSelfHostedSecretStoreData:
      type: object
      title: EditSelfHostedSecretStoreData
      properties:
        password:
          type: string
          title: Password
          description: The password of the user in PAM 'SecretsHub'
          minLength: 1
        connectorId:
          $ref: '#/components/schemas/ConnectorId'
        connectorPoolId:
          $ref: '#/components/schemas/ConnectorPoolId'
    EditGsmSecretStoreData:
      type: object
      title: EditGsmSecretStoreData
      properties:
        gcpProjectName:
          type: string
          title: Gcpprojectname
          description: The name of the GCP project where the GCP Secret Manager is stored
          pattern: '[a-zA-Z0-9''"!- ]'
          minLength: 4
          maxLength: 30
          example: gcp-project-name-example
        gcpWorkloadIdentityPoolId:
          type: string
          title: Gcpworkloadidentitypoolid
          description: The GCP workload identity pool ID created for Secrets Hub to access the GCP Secret Manager
          pattern: '[a-z0-9-]'
          minLength: 4
          maxLength: 32
          example: gcp-pool-id-example
        gcpPoolProviderId:
          type: string
          title: Gcppoolproviderid
          description: The GCP pool provider ID created for Secrets Hub to access the GCP Secret Manager
          pattern: '[a-z0-9-]'
          minLength: 4
          maxLength: 32
          example: gcp-provider-id-example
        serviceAccountEmail:
          type: string
          title: Serviceaccountemail
          description: The service account email created for Secrets Hub to access the GCP Secret Manager
          pattern: '[a-z0-9-]{6,30}@[a-z0-9-]{6,30}.iam.gserviceaccount.com'
          minLength: 37
          maxLength: 86
          example: service-account@example.iam.gserviceaccount.com
    SecretStoreOutput:
      type: object
      title: SecretStoreOutput
      discriminator:
        propertyName: type
        mapping:
          AWS_ASM: '#/components/schemas/AwsAsmData'
          AZURE_AKV: '#/components/schemas/AzureAkvData'
          GCP_GSM: '#/components/schemas/GcpGsmData'
          PAM_PCLOUD: '#/components/schemas/PcloudSecretStoreData'
          PAM_SELF_HOSTED: '#/components/schemas/SelfHostedSecretStoreData'
      properties:
        id:
          type: string
          title: Id
          description: The unique identifier of the secret store
          pattern: '^store-[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
          example: store-5a05468b-fa58-4bcf-84e9-62ede8af55f4
        type:
          description: The type of secret store.
          allOf:
            - $ref: '#/components/schemas/SecretStoreType'
          example: AWS_ASM
        behaviors:
          type: array
          description: Whether the secret store is used as a source or a target. There can be only one source secret store per tenant.
          items:
            $ref: '#/components/schemas/SecretStoreBehavior'
          example: SECRETS_TARGET
        createdAt:
          type: string
          title: Createdat
          description: The secret store creation date.
          example: '2023-07-06T15:43:48.103000'
        createdBy:
          type: string
          title: Createdby
          description: The user who created the secret store.
          minLength: 3
          maxLength: 128
          example: user@example.com
        data:
          title: Data
          description: The data of the secret store depends on the secret store type.
          oneOf:
            - $ref: '#/components/schemas/AwsAsmData'
            - $ref: '#/components/schemas/AzureAkvData'
            - $ref: '#/components/schemas/GcpGsmData'
            - $ref: '#/components/schemas/PcloudSecretStoreData'
            - $ref: '#/components/schemas/SelfHostedSecretStoreData'
        description:
          type: string
          title: Description
          description: A description of the secret store.
          pattern: '^[A-Za-z0-9-_,.();: ]*$'
          minLength: 1
          maxLength: 150
          example: AWS Secrets Manager for dev-team-prod
        name:
          type: string
          title: Name
          description: The secret store name.
          pattern: '^[A-Za-z0-9-_,.();: ]*$'
          minLength: 1
          maxLength: 200
          example: Account alias - us-east-1
        updatedAt:
          type: string
          title: Updatedat
          description: The last date the secret store was updated
          example: '2023-07-06T15:43:48.103000'
        updatedBy:
          type: string
          title: Updatedby
          description: The last user to update the secret store.
          minLength: 3
          maxLength: 128
          example: user@example.com
        creationDetails:
          type: string
          enum:
            - Secrets Hub
            - Connect Cloud Environment
        organizationId:
          type: string
          pattern: 'o-[a-z0-9]'
          minLength: 10
          maxLength: 32
      required:
        - id
        - type
        - behaviors
        - createdAt
        - createdBy
        - data
        - name
        - updatedAt
        - updatedBy
    SecretStoresWithReplicatedDataOutputList:
      type: object
      title: SecretStoresWithReplicatedDataOutputList
      properties:
        secretStores:
          type: array
          title: Secretstores
          items:
            $ref: '#/components/schemas/SecretStoreWithReplicatedDataOutput'
      required:
        - secretStores
    SecretStoreInput:
      type: object
      title: SecretStoreInput
      discriminator:
        propertyName: type
        mapping:
          AWS_ASM: '#/components/schemas/AwsAsmData'
          AZURE_AKV: '#/components/schemas/CreateAzureAkvData'
          GCP_GSM: '#/components/schemas/GcpGsmData'
          PAM_SELF_HOSTED: '#/components/schemas/CreateSelfHostedSecretStoreData'
      properties:
        type:
          description: The type of the secret store.
          allOf:
            - $ref: '#/components/schemas/SecretStoreType'
          example: AWS_ASM
        data:
          title: Data
          description: The data of the secret store depends on the secret store type.
          oneOf:
            - $ref: '#/components/schemas/AwsAsmData'
            - $ref: '#/components/schemas/CreateAzureAkvData'
            - $ref: '#/components/schemas/CreateSelfHostedSecretStoreData'
            - $ref: '#/components/schemas/GcpGsmData'
        description:
          type: string
          title: Description
          description: A description of the secret store.
          pattern: '[A-Za-z0-9-_,.();: ]'
          minLength: 1
          maxLength: 150
          example: AWS Secrets Manager for dev-team-prod
        name:
          type: string
          title: Name
          description: The secret store name.
          pattern: '[a-zA-Z0-9!"#$%&''()*+,-./:;<=>?@[\]^_``{|}~]'
          minLength: 1
          maxLength: 200
          example: Account alias - us-east-1
        state:
          type: string
          enum:
            - ENABLED
            - DISABLED
          description: The secret store state
          default: ENABLED
          example: ENABLED
      required:
        - type
        - data
        - name
    CreateAzureAkvData:
      type: object
      title: CreateAzureAkvData
      properties:
        appClientDirectoryId:
          type: string
          title: Appclientdirectoryid
          description: The Azure directory/tenant ID where the application (user) for Secrets Hub was created
          format: uuid
          minLength: 36
          maxLength: 36
          example: c389961d-a0cd-46ab-9f69-877f756a59c1
        azureVaultUrl:
          type: string
          title: Azurevaulturl
          description: The URI used to access and get secrets stored in Azure Key Vault
          pattern: 'https://[a-zA-Z0-9-]{3,24}.(vault.azure.net|vault.azure.cn|vault.usgovcloudapi.net|vault.microsoftazure.de)'
          minLength: 26
          maxLength: 57
          example: 'https://example.vault.azure.cn'
        appClientId:
          type: string
          title: Appclientid
          description: A unique Application (client) ID assigned to Secrets Hub by Azure AD when the app was registered. Secrets Hub will use this ID to access the Azure Key Vault
          format: uuid
          minLength: 36
          maxLength: 36
          example: c389961d-a0cd-46ab-9f69-877f756a59c1
        connectionConfig:
          title: Connectionconfig
          description: The network access configuration set for your Azure Key Vault. Contact your Azure tenant admin to identify it
          anyOf:
            - $ref: '#/components/schemas/ConnectorConnectionConfig'
            - $ref: '#/components/schemas/PublicConnectionConfig'
        subscriptionId:
          type: string
          title: Subscriptionid
          description: The Azure subscription ID linked to the Azure Key Vault
          format: uuid
          minLength: 36
          maxLength: 36
          example: c389961d-a0cd-46ab-9f69-877f756a59c1
        subscriptionName:
          type: string
          title: Subscriptionname
          description: The Azure subscription name linked to the Azure Key Vault
          pattern: 'NOT[<>;|]'
          minLength: 1
          maxLength: 64
          example: subscription-name-example
        resourceGroupName:
          type: string
          title: Resourcegroupname
          description: The Azure resource group name where the Azure Key Vault is stored
          pattern: '[a-zA-Z0-9_.()-]'
          minLength: 1
          maxLength: 90
          example: Resource-Group-example
        appClientSecret:
          type: string
          title: Appclientsecret
          description: The user's password that will be used by Secrets Hub to access the Azure Key Vault.
          format: password
          minLength: 1
          writeOnly: true
          example: password-example
      required:
        - appClientDirectoryId
        - azureVaultUrl
        - appClientId
        - connectionConfig
        - appClientSecret
    CreateSelfHostedSecretStoreData:
      type: object
      title: CreateSelfHostedSecretStoreData
      properties:
        userName:
          type: string
          title: Username
          description: The user used for Secrets Hub to get secrets from PAM source. Should be 'SecretsHub'. This user should be created by REST API in PAM.
          pattern: 'NOT[/\:*?"<>|\t\r\n]'
          minLength: 1
          maxLength: 128
          example: SecretsHub
        password:
          type: string
          title: Password
          description: The password of the user in PAM 'SecretsHub'
          format: password
          minLength: 1
          maxLength: 39
          writeOnly: true
          example: password-example
        url:
          type: string
          title: Url
          description: 'The URL of your PAM Self-Hosted PVWA, or the load balancer for the PVWA'
          format: uri
          pattern: 'https://[a-zA-Z0-9.-[]:]/passwordvault'
          minLength: 1
          maxLength: 2083
          example: 'https://pam-example.com/PasswordVault'
        connectorId:
          $ref: '#/components/schemas/ConnectorId'
        Connectorpoolid:
          $ref: '#/components/schemas/ConnectorPoolId'
      required:
        - userName
        - password
        - url
    ConnectionsTestOutput:
      type: object
      title: ConnectionsTestOutput
      properties:
        status:
          description: The connection test result
          allOf:
            - $ref: '#/components/schemas/Status'
          example: OK
        message:
          type: string
          title: Message
          description: A message containing extra information from the connection test
          example: Successfully connected to the sync target!
      required:
        - status
    Status:
      type: string
      enum:
        - OK
        - ERROR
      title: Status
      description: An enumeration.
    SecretListOutput:
      type: object
      title: SecretListOutput
      properties:
        count:
          type: integer
          title: Count
          description: Number of secrets in the result set
          minimum: 0
          example: 1
        totalCount:
          type: integer
          title: TotalCount
          description: Number of secrets in all result sets
          minimum: 0
          example: 1
        secrets:
          type: array
          title: Secrets
          items:
            anyOf:
              - $ref: '#/components/schemas/ExtendedSecretOutput'
              - $ref: '#/components/schemas/SecretOutput'
      required:
        - secrets
#    ExtendedSecretListOutput:
#      type: object
#      title: ExtendedSecretListOutput
#      properties:
#        count:
#          type: integer
#          title: Count
#          description: Number of secrets in the result set
#          minimum: 0
#          example: 1
#        totalCount:
#          type: integer
#          title: TotalCount
#          description: Number of secrets in all result sets
#          minimum: 0
#          example: 1
#        secrets:
#          type: array
#          title: Secrets
#          items:
#            $ref: '#/components/schemas/ExtendedSecretOutput'
#      required:
#        - secrets
    ExtendedSecretOutput:
      type: object
      title: ExtendedSecretOutput
      discriminator:
        propertyName: vendorSubType
        mapping:
          ASM: '#/components/schemas/AsmSecretVendorData'
          AKV: '#/components/schemas/AkvSecretVendorData'
          GSM: '#/components/schemas/GsmSecretVendorData'
      properties:
        vendorType:
          description: The vendor type of the store where the secret was found.
          allOf:
            - $ref: '#/components/schemas/VendorType'
          example: AWS
        vendorSubType:
          description: The subtype of the secret store where the secret was discovered.
          allOf:
            - $ref: '#/components/schemas/VendorSubType'
          example: ASM
        id:
          type: string
          title: Id
          description: The unique identifier of the secret in Secrets Hub (internal).
          pattern: 'secret-[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{20}$'
          example: secret-73135722-1aef-5481-6a17-d7d4d3a70731-ca9dd371
        originId:
          type: string
          title: Originid
          description: The unique identifier of the secret as defined in the secret store.
          minLength: 1
          maxLength: 2048
          example: 'arn:aws:secretsmanager:us-east-1:123456789012:secret:my-secret'
        name:
          type: string
          title: Name
          description: The name of the secret as defined in the secret store.
          minLength: 1
          maxLength: 512
          example: my-secret
        storeId:
          $ref: '#/components/schemas/SecretStoreIdString'
        discoveredAt:
          type: string
          title: Discoveredat
          description: The date and time that the secret was discovered by the Secrets Hub scan.
          example: '2023-07-06T15:43:48.103000+00:00'
        vendorData:
          title: Vendordata
          description: Data related to the secret as defined in the cloud platform.
          oneOf:
            - $ref: '#/components/schemas/AsmSecretVendorData'
            - $ref: '#/components/schemas/AkvSecretVendorData'
            - $ref: '#/components/schemas/GsmSecretVendorData'
          example: '{ "kmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/d151d612-2a9d-4557-a3f4-23d897cfa123", "awsAccountid": "123456789012", "createdAt": "2023-07-06T15:43:48.103000+00:00", "updatedAt": "2023-07-06T15:43:48.103000+00:00","lastRetrievedAt": "2023-07-06T15:43:48.103000+00:00","tags": [ { "Key": "team", "Value": "onyx1" } ] }'
        lastScannedAt:
          type: string
          title: Lastscannedat
          description: The last date and time the secret was scanned by Secrets Hub.
          example: '2023-07-06T15:43:48.103000+00:00'
        storeName:
          type: string
          pattern: '[A-Za-z0-9-_,.();: ]'
          minLength: 1
          maxLength: 200
          example: store-name-example
        onboarded:
          type: boolean
          description: Indicates whether the secret is onboarded to PAM.
          default: false
      required:
        - vendorType
        - vendorSubType
        - id
        - originId
        - storeId
        - discoveredAt
        - vendorData
        - lastScannedAt
    VendorType:
      type: string
      enum:
        - AWS
        - AZURE
        - GCP
      title: VendorType
      description: An enumeration.
    VendorSubType:
      type: string
      enum:
        - ASM
        - AKV
        - GSM
      title: VendorSubType
      description: An enumeration.
    AsmSecretVendorData:
      type: object
      title: AsmSecretVendorData
      properties:
        createdAt:
          type: string
          title: Createdat
          description: The date and time the secret was created in the secret store.
          example: '2023-07-06T15:43:48.103000+00:00'
        updatedAt:
          type: string
          title: Updatedat
          description: The date and time the secret was last updated.
          example: '2023-07-06T15:43:48.103000+00:00'
        tags:
          type: object
          title: Tags
          description: The tags that are applied to the secret in the secret store.
          additionalProperties:
            type: string
          example: '[ { "Key": "Team", "Value": "Dev1" },  { "Key": "Project", "Value": "ProdApps" } ]'
        lastRetrievedAt:
          type: string
          title: Lastretrievedat
          description: The last date and time the secret was retrieved from the secret store.
          example: '2023-07-06T15:43:48.103000+00:00'
        kmsKeyId:
          type: string
          title: Kmskeyid
          description: The ID of the encryption key used to encrypt the secret value in AWS Secrets Manager.
          default: aws/secretsmanager
          example: 'arn:aws:kms:us-east-1:123456789012:key/d151d612-2a9d-4557-a3f4-23d897cfa123'
        awsAccountId:
          type: string
          title: Awsaccountid
          description: The AWS account ID where the secret is stored in
          pattern: '^\d{12}$'
          example: '123456789201'
        region:
          type: string
          pattern: '[a-z0-9-]'
          minLength: 4
          maxLength: 22
          example: us-east-1
    AkvSecretVendorData:
      type: object
      title: AkvSecretVendorData
      properties:
        createdAt:
          type: string
          title: Createdat
          description: The date and time the secret was created in the secret store.
          example: '2023-07-06T15:43:48.103000+00:00'
        updatedAt:
          type: string
          title: Updatedat
          description: The date and time the secret was last updated.
          example: '2023-07-06T15:43:48.103000+00:00'
        tags:
          type: object
          title: Tags
          description: The tags that are applied to the secret in the secret store.
          additionalProperties:
            type: string
          example: '[ { "Key": "Team", "Value": "Dev1" },  { "Key": "Project", "Value": "ProdApps" } ]'
        lastRetrievedAt:
          type: string
          title: Lastretrievedat
          description: The last date and time the secret was retrieved from the secret store.
          example: '2023-07-06T15:43:48.103000+00:00'
        subscriptionId:
          type: string
          title: Subscriptionid
          description: The ID of the Azure subscription associated with the Azure Key Vault.
          example: 5882b2b4-366f-4d1a-a65a-ee5d3cdc8adf
        subscriptionName:
          type: string
          title: Subscriptionname
          description: The display name of the Azure subscription associated with the Azure Key Vault.
          example: COM-NP-Int M-Example-GroupName-US-Env
        resourceGroupName:
          type: string
          title: Resourcegroupname
          description: The name of the resource group to which the Azure Key Vault belongs.
          example: azure-test
        expiresAt:
          type: string
          title: Expiresat
          description: 'The date the secret expires and can no longer be used, as defined in Azure Key Vault.'
          example: '2026-01-30T07:22:49.000Z'
        notBefore:
          type: string
          title: Notbefore
          description: 'The date from which the secret is valid and can be used, as defined in Azure Key Vault.'
          example: '2024-01-30T12:07:31.000Z'
        enabled:
          type: boolean
          title: Enabled
          description: 'Indicates whether the secret is enabled, as defined in Azure Key Vault.'
          example: true
      required:
        - enabled
    GsmSecretVendorData:
      type: object
      title: GsmSecretVendorData
      properties:
        createdAt:
          type: string
          description: The date and time the secret was created in the secret store.
          example: '2023-07-06T15:43:48.103000+00:00'
        tags:
          type: object
          description: The tags that are applied to the secret in the secret store.
          additionalProperties:
            type: string
        projectName:
          type: string
          description: The name of the Google Cloud project where the secret is stored.
          example: project-123456
        projectNumber:
          type: string
          description: The number of the Google Cloud project where the secret is stored.
          example: '123456'
        secretEnabledVersions:
          type: integer
          description: The number of versions of the secret that are enabled in external secret store.
          example: 1
        secretType:
          type: string
          enum:
            - 'GLOBAL, REGIONAL'
          description: The type of the secret stored in external secret store.
          example: GLOBAL
        enabled:
          type: boolean
          description: Indicates whether the secret is enabled in external secret store.
        expiresAt:
          type: string
          description: 'The date the secret expires and can no longer be used, as defined in external secret store.'
          example: '2026-01-30T07:22:49.103000+00:00'
        region:
          type: string
          description: The region where the secret is stored in external secret store.
          example: us-central1
        replicas:
          type: array
          description: 'If the secret is being replicated, and to where.'
          items:
            type: object
            properties:
              location:
                type: string
                description: |
                  us-west1
                example: us-central1
        kmsKeyId:
          type: string
          description: The ID of the encryption key used to encrypt the secret value in the external secret store.
          example: projects/123456/locations/us-central1/keyRings/my-key-ring/cryptoKeys/my-key
        annotations:
          type: object
          description: The annotations that are applied to the secret in external secret store.
          additionalProperties:
            type: string
        nextRotationTime:
          type: string
          description: The time at which the secret is scheduled to be rotated by the external secret store.
          example: '2026-01-30'
        replicationMethod:
          type: string
          enum:
            - 'AUTOMATIC, USER_MANAGED'
          description: The method used to replicate the secret in external secret store.
          example: AUTOMATIC
      x-examples:
        Example 1:
          dataType: GSM
          createdAt: '2023-07-06T15:43:48.103000+00:00'
          updatedAt: '2023-07-06T15:43:48.103000+00:00'
          tags:
            - Key: Team
              Value: Dev1
            - Key: Project
              Value: ProdApps
          lastRetrievedAt: '2023-07-06T15:43:48.103000+00:00'
          projectName: project-123456
          projectNumber: '123456'
          secretEnabledVersions: 0
          secretType: symmetric
          enabled: false
          expiresAt: '2026-01-30T07:22:49.103000+00:00'
          replicas:
            - location: us-central1
            - location: us-west1
          region: us-central1
          kmsKeyId: projects/123456/locations/us-central1/keyRings/my-key-ring/cryptoKeys/my-key
          annotations:
            team: dev1
            project: prod-apps
          nextRotationTime: '2026-01-30'
          replicationMethod: AUTOMATIC
#    RegularSecretListOutput:
#      type: object
#      title: RegularSecretListOutput
#      properties:
#        count:
#          type: integer
#          title: Count
#          description: Number of secrets in the result set
#          minimum: 0
#          example: 1
#        totalCount:
#          type: integer
#          title: TotalCount
#          description: Number of secrets in all result sets
#          minimum: 0
#          example: 1
#        secrets:
#          type: array
#          title: Secrets
#          items:
#            $ref: '#/components/schemas/SecretOutput'
#      required:
#        - secrets
    SecretOutput:
      type: object
      title: SecretOutput
      properties:
        vendorType:
          description: The vendor type of the store where the secret was found in.
          allOf:
            - $ref: '#/components/schemas/VendorType'
          example: AWS
        vendorSubType:
          description: The subtype of the secret store where the secret was discovered.
          allOf:
            - $ref: '#/components/schemas/VendorSubType'
          example: ASM
        id:
          type: string
          title: Id
          description: The unique identifier of the secret in Secrets Hub (internal).
          pattern: 'secret-[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{20}$'
          example: secret-73135722-1aef-5481-6a17-d7d4d3a70731-ca9dd371
        originId:
          type: string
          title: Originid
          description: The unique identifier of the secret as defined in the secret store.
          minLength: 1
          maxLength: 2048
          example: 'arn:aws:secretsmanager:us-east-1:123456789012:secret:my-secret'
        name:
          type: string
          title: Name
          description: The name of the secret as defined in the secret store.
          minLength: 1
          maxLength: 512
          example: my-secret
        storeId:
          $ref: '#/components/schemas/SecretStoreIdString'
        discoveredAt:
          type: string
          title: Discoveredat
          description: The date and time that the secret was discovered by the Secrets Hub scan.
          example: '2023-07-06T15:43:48.103000+00:00'
        syncedByCyberArk:
          type: boolean
          nullable: true
          description: 'Indicates whether the secret has been synced by CyberArk. If not set, the status is unknown.'
        storeName:
          type: string
          pattern: '[A-Za-z0-9-_,.();: ]'
          minLength: 1
          maxLength: 200
          example: store-name-example
      required:
        - vendorType
        - vendorSubType
        - id
        - originId
        - storeId
        - discoveredAt
    PolicyListOutput:
      type: object
      title: RegularPolicyListOutput
      properties:
        count:
          type: integer
          title: Count
          description: The amount of policies the tenant currently has
          minimum: 0
          example: 1
        policies:
          type: array
          title: Policies
          description: The list of all defined policies
          items:
            anyOf:
              - $ref: '#/components/schemas/PolicyRegularOutput'
              - $ref: '#/components/schemas/PolicyExtendedOutput'
      required:
        - policies
    PolicyRegularOutput:
      type: object
      title: PolicyRegularOutput
      properties:
        id:
          type: string
          title: Id
          description: The unique identifier of the policy
          pattern: 'policy-[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
          example: policy-62d19762-85d0-4cc0-ba44-9e0156a5c9c6
        name:
          type: string
          title: Name
          description: The policy name
          pattern: '^[A-Za-z0-9-_,.();: ]*$'
          minLength: 1
          maxLength: 100
          example: Dev Team1 Policy
        description:
          type: string
          title: Description
          description: The policy description
          pattern: '^[A-Za-z0-9-_,.();: ]*$'
          minLength: 1
          maxLength: 150
          example: This policy is syncing from PAM Self Hosted to us-east-1
        createdAt:
          type: string
          title: Createdat
          description: The policy creation date
          example: '2023-07-03T14:03:25.146000'
        updatedAt:
          type: string
          title: Updatedat
          description: The last date the policy was updated
          example: '2023-07-03T14:03:25.146000'
        createdBy:
          type: string
          title: Createdby
          description: The creator of the policy
          example: user@example.com
        updatedBy:
          type: string
          title: Updatedby
          description: The name of the latest person who updated the policy
          example: user@example.com
        source:
          title: Source
          description: The secret store where the secrets are synced from
          allOf:
            - $ref: '#/components/schemas/SecretStoreId'
        target:
          title: Target
          description: The secret store where the secrets are synced to
          allOf:
            - $ref: '#/components/schemas/SecretStoreId'
        filter:
          title: Filter
          description: The secrets filter that defines which secrets to sync from the source
          allOf:
            - $ref: '#/components/schemas/FilterId'
        transformation:
          title: Transformation
          description: The transformation applied on the secrets
          allOf:
            - $ref: '#/components/schemas/TransformationId'
        state:
          title: State
          description: The state of the given policy
          allOf:
            - $ref: '#/components/schemas/PolicyShortState'
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
        - source
        - target
        - filter
        - state
    SecretStoreId:
      type: object
      title: SecretStoreId
      properties:
        id:
          $ref: '#/components/schemas/SecretStoreIdString'
      required:
        - id
    FilterId:
      type: object
      title: FilterId
      properties:
        id:
          type: string
          title: Id
          description: The unique identifier of the filter
          pattern: 'filter-[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
          minLength: 43
          maxLength: 43
          example: filter-c389961d-a0cd-46ab-9f69-877f756a59c1
      required:
        - id
    TransformationId:
      type: object
      title: TransformationId
      properties:
        id:
          type: string
          title: Id
          description: The identifier of the transformation
          pattern: 'trns-([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|[a-z-]{5,50})'
          minLength: 10
          maxLength: 55
          example: trns-5a05468b-fa58-4bcf-84e9-62ede8af55f4
      required:
        - id
    PolicyShortState:
      type: object
      title: PolicyShortState
      properties:
        current:
          description: The policy's current state
          allOf:
            - $ref: '#/components/schemas/State'
          example: ENABLED
      required:
        - current
    State:
      type: string
      enum:
        - ENABLED
        - ENABLING
        - DISABLED
        - DISABLING
        - DELETING
        - NONE
      title: State
      description: An enumeration.
    PolicyExtendedOutput:
      type: object
      title: PolicyExtendedOutput
      properties:
        id:
          type: string
          title: Id
          description: The unique identifier of the policy
          pattern: '^policy-[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
        name:
          type: string
          title: Name
          description: The policy name
          pattern: '^[A-Za-z0-9-_,.();: ]*$'
          minLength: 1
          maxLength: 100
        description:
          type: string
          title: Description
          description: The policy description
          pattern: '^[A-Za-z0-9-_,.();: ]*$'
          minLength: 1
          maxLength: 150
        source:
          title: Source
          description: The secret store where the secrets are synced from
          allOf:
            - $ref: '#/components/schemas/SecretStoreOutput'
        target:
          title: Target
          description: The secret store where the secrets are synced to
          allOf:
            - $ref: '#/components/schemas/SecretStoreOutput'
        filter:
          title: Filter
          description: The filter that defines which secrets to sync from the source
          allOf:
            - $ref: '#/components/schemas/FilterOutput'
        transformation:
          title: Transformation
          description: The transformation applied on the secrets
          allOf:
            - $ref: '#/components/schemas/TransformationId'
        status:
          title: Status
          description: The policy status
          allOf:
            - $ref: '#/components/schemas/PolicyStatusObject'
        createdAt:
          type: string
          title: Createdat
          description: The policy creation date
          example: '2023-07-03T14:03:25.146000'
        updatedAt:
          type: string
          title: Updatedat
          description: The last date the policy was updated
          example: '2023-07-03T14:03:25.146000'
        createdBy:
          type: string
          title: Createdby
          description: The creator of the policy.
        updatedBy:
          type: string
          title: Updatedby
          description: The user who last updated the policy.
        state:
          title: State
          description: The state of the policy
          allOf:
            - $ref: '#/components/schemas/PolicyState'
      required:
        - id
        - name
        - status
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
        - state
    FilterOutput:
      type: object
      title: FilterOutput
      properties:
        id:
          type: string
          title: Id
          description: The unique identifier of the secrets filter.
          pattern: 'filter-[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
          minLength: 43
          maxLength: 43
          example: filter-5800242b-353c-4075-b865-f8ab3b75e279
        type:
          description: The secrets filter type.
          allOf:
            - $ref: '#/components/schemas/FilterType'
          example: PAM_SAFE
        data:
          title: Data
          description: Information about the PAM Safe.
          allOf:
            - $ref: '#/components/schemas/PamSafeFilterData'
        createdAt:
          type: string
          title: Createdat
          description: The secrets filter creation date.
          example: '2023-07-06T15:41:15.452000'
        updatedAt:
          type: string
          title: Updatedat
          description: The last date the secrets filter was updated.
          example: '2023-07-06T15:41:15.452000'
        createdBy:
          type: string
          title: Createdby
          description: The user who created the secrets filter.
          minLength: 3
          maxLength: 128
          example: user@example.com
        updatedBy:
          type: string
          title: Updatedby
          description: The last user to update the secrets filter.
          minLength: 3
          maxLength: 128
          example: user@example.com
      required:
        - id
        - type
        - data
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
    FilterType:
      type: string
      enum:
        - PAM_SAFE
      title: FilterType
      description: An enumeration.
    PamSafeFilterData:
      type: object
      title: PAMSafeFilterData
      properties:
        safeName:
          type: string
          title: Safename
          description: The Safe name as defined in PAM.
          pattern: 'NOT[/\:.*?"<>|\t\r\n]'
          minLength: 1
          maxLength: 28
          example: safe-name-example
      required:
        - safeName
    PolicyStatusObject:
      type: object
      title: PolicyStatusObject
      properties:
        policyId:
          type: string
          title: Policyid
          description: The unique identifier of policy
          pattern: 'policy-[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
        policyStatus:
          description: The policy synchronization status
          allOf:
            - $ref: '#/components/schemas/PolicyStatus'
        isRunning:
          type: boolean
          title: Isrunning
          description: Is the policy running
        lastRun:
          type: string
          title: Lastrun
          description: The date of the last synchronization attempt
          example: '2023-07-03T14:03:25.146000'
        lastSuccessTime:
          type: string
          title: Lastsuccesstime
          description: The date of the last successful policy synchronization
          example: '2023-07-03T14:03:25.146000'
        nextAttemptToSyncTime:
          type: string
          title: Nextattempttosynctime
          description: The date of the next policy synchronization attempt
          example: '2023-07-03T14:03:25.146000'
        error:
          type: string
          title: Error
          description: A error description explaining why the synchronization failed
      required:
        - policyId
        - policyStatus
        - isRunning
    PolicyStatus:
      type: string
      enum:
        - IN_PROGRESS
        - SUCCESS
        - PARTIAL_SUCCESS
        - FAILED
      title: PolicyStatus
      description: An enumeration.
    PolicyState:
      type: object
      title: PolicyState
      properties:
        current:
          description: The policy's current state
          allOf:
            - $ref: '#/components/schemas/State'
          example: ENABLED
        stateDetails:
          title: Statedetails
          description: The policy's transition state details
          allOf:
            - $ref: '#/components/schemas/PolicyStateDetails'
      required:
        - current
        - stateDetails
    PolicyStateDetails:
      type: object
      title: PolicyStateDetails
      properties:
        status:
          description: The policy synchronization status
          allOf:
            - $ref: '#/components/schemas/StateTransition'
        fromState:
          description: The previous policy state
          allOf:
            - $ref: '#/components/schemas/State'
        toState:
          description: The wanted policy state
          allOf:
            - $ref: '#/components/schemas/State'
        message:
          type: string
          title: Message
          description: A message regarding the transition of the state
          pattern: '^[A-Za-z0-9-_,.();: ]*$'
          minLength: 1
          maxLength: 150
      required:
        - status
        - fromState
        - toState
    StateTransition:
      type: string
      enum:
        - SUCCEEDED
        - IN_PROGRESS
        - FAILED
        - NONE
      title: StateTransition
      description: An enumeration.
    PolicyInput:
      type: object
      title: PolicyInput
      properties:
        name:
          type: string
          title: Name
          description: The policy name
          pattern: '[A-Za-z0-9-_,.();: ]'
          minLength: 1
          maxLength: 100
          example: Dev Team1 Policy
        description:
          type: string
          title: Description
          description: The policy description
          pattern: '[A-Za-z0-9-_,.();: ]'
          minLength: 1
          maxLength: 150
          example: This policy is syncing from PAM Self Hosted to us-east-1
        source:
          title: Source
          description: The secret store where the secrets are synced from
          allOf:
            - $ref: '#/components/schemas/SecretStoreId'
        target:
          title: Target
          description: The secret store where the secrets are synced to
          allOf:
            - $ref: '#/components/schemas/SecretStoreId'
        filter:
          title: Filter
          description: The filter that defines which secrets to sync from the source
          anyOf:
            - $ref: '#/components/schemas/FilterInput'
            - $ref: '#/components/schemas/FilterId'
        transformation:
          title: Transformation
          description: 'Choose whether to sync only the secret value or to sync the default secret value, which includes other PAM account properties.'
          allOf:
            - $ref: '#/components/schemas/PolicyPredefinedTransformationInput'
      required:
        - name
        - source
        - target
        - filter
    FilterInput:
      type: object
      title: FilterInput
      properties:
        data:
          title: Data
          description: Information about the secrets filter.
          allOf:
            - $ref: '#/components/schemas/PamSafeFilterData'
        type:
          description: The secrets filter type
          allOf:
            - $ref: '#/components/schemas/FilterType'
          example: PAM_SAFE
      required:
        - data
        - type
    PolicyPredefinedTransformationInput:
      type: object
      title: PolicyPredefinedTransformationInput
      properties:
        predefined:
          description: The predefined transformation type
          allOf:
            - $ref: '#/components/schemas/PredefinedTransformationType'
          example: password_only_plain_text
      required:
        - predefined
    PredefinedTransformationType:
      type: string
      enum:
        - default
        - password_only_plain_text
      title: PredefinedTransformationType
      description: An enumeration.
    StateChangeInput:
      type: object
      title: StateChangeInput
      properties:
        action:
          description: The requested state for the policy
          allOf:
            - $ref: '#/components/schemas/ExternalStateChangeAction'
          example: disable
      required:
        - action
    ExternalStateChangeAction:
      type: string
      enum:
        - enable
        - disable
      title: ExternalStateChangeAction
      description: An enumeration.
    DeletePolicyOutput:
      type: object
      title: DeletePolicyOutput
      properties:
        message:
          type: string
          title: Message
      required:
        - message
    TriggerScanInputBody:
      type: object
      title: TriggerScanInputBody
      properties:
        scope:
          $ref: '#/components/schemas/Scope'
      required:
        - scope
    Scope:
      type: object
      title: Scope
      properties:
        secretStoresIds:
          type: array
          title: Secretstoresids
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/SecretStoreIdString'
      required:
        - secretStoresIds
    TriggerScanOutput:
      type: object
      title: TriggerScanOutput
      properties:
        scanIds:
          type: array
          title: Scanids
          items:
            type: string
            pattern: 'scan-[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
      required:
        - scanIds
    ScanListOutput:
      type: object
      title: ScanListOutput
      properties:
        count:
          type: integer
          title: Count
          minimum: 0
        scans:
          type: array
          title: Scans
          items:
            $ref: '#/components/schemas/ScanOutput'
      required:
        - scans
    ScanOutput:
      type: object
      title: ScanOutput
      properties:
        id:
          type: string
          title: Id
          description: The unique identifier of the scan
          pattern: 'scan-[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
          example: scan-5a05468b-fa58-4bcf-84e9-62ede8af55f4
        metadata:
          type: object
          title: Metadata
          description: 'Data related to the scan. For example, secret store ID'
          example: '{"storeId": "store-5a05468b-fa58-4bcf-84e9-62ede8af55f4"}'
        status:
          description: The status of the scan.
          allOf:
            - $ref: '#/components/schemas/ScanStatus'
          example: SUCCESS
        message:
          type: string
          title: Message
          description: More information on the scan status.
          example: The scan was done successfully
        startedAt:
          type: string
          title: Startedat
          description: The date and time the scan started
          example: '2023-07-06T15:43:48.103000'
        finishedAt:
          type: string
          title: Finishedat
          description: The date and time the scan ended
          example: '2023-07-06T15:45:00.103000'
        createdBy:
          type: string
          title: Createdby
          description: The user who triggered the scan.
          example: first.last@cyberark.com.73723
      required:
        - id
        - metadata
        - status
        - startedAt
        - createdBy
    TenantInfoOutput:
      type: object
      title: TenantInfoOutput
      properties:
        tenantRoleArn:
          type: string
          title: Tenantrolearn
          description: The Secrets Hub tenant role ARN
          example: 'arn:aws:iam::123456789101:role/Secrets-Hub-Role-Name'
        tenantPamType:
          type: string
          title: Tenantpamtype
          description: The tenant PAM type
          example: PAM_SELF_HOSTED
      required:
        - tenantRoleArn
        - tenantPamType
    TenantConfigurationOutput:
      type: object
      title: TenantConfigurationOutput
      properties:
        secretsSource:
          $ref: '#/components/schemas/SecretsSource'
        authenticationIdentities:
          $ref: '#/components/schemas/AuthenticationIdentities'
        syncSettings:
          $ref: '#/components/schemas/Syncsettings'
      required:
        - secretsSource
        - authenticationIdentities
        - syncSettings
    SecretsSource:
      type: object
      title: SecretsSource
      properties:
        pamType:
          type: string
          title: Pamtype
          description: The tenant PAM type
          example: PAM_SELF_HOSTED
    AuthenticationIdentities:
      type: object
      title: authenticationIdentities
      properties:
        aws:
          type: object
          title: Aws
          properties:
            tenantRoleArn:
              type: string
              title: Tenantrolearn
              description: The Secrets Hub tenant role ARN
              example: 'arn:aws:iam::123456789101:role/Secrets-Hub-Role-Name'
    Syncsettings:
      type: object
      title: syncSettings
      properties:
        secretValidity:
          type: number
          description: The amount of days the secret will be valid after sync
          minimum: 1
          maximum: 730
          default: None
          example: 300
security:
  - bearerAuth: []
