// Package secretshub provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package secretshub

import (
	"encoding/json"

	"github.com/oapi-codegen/runtime"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for ConnectorConnectionConfigConnectionType.
const (
	CONNECTOR ConnectorConnectionConfigConnectionType = "CONNECTOR"
)

// Defines values for ExternalStateChangeAction.
const (
	ExternalStateChangeActionDisable ExternalStateChangeAction = "disable"
	ExternalStateChangeActionEnable  ExternalStateChangeAction = "enable"
)

// Defines values for FilterType.
const (
	PAMSAFE FilterType = "PAM_SAFE"
)

// Defines values for GsmSecretVendorDataReplicationMethod.
const (
	AUTOMATICUSERMANAGED GsmSecretVendorDataReplicationMethod = "AUTOMATIC, USER_MANAGED"
)

// Defines values for GsmSecretVendorDataSecretType.
const (
	GLOBALREGIONAL GsmSecretVendorDataSecretType = "GLOBAL, REGIONAL"
)

// Defines values for PolicyStatus.
const (
	PolicyStatusFAILED         PolicyStatus = "FAILED"
	PolicyStatusINPROGRESS     PolicyStatus = "IN_PROGRESS"
	PolicyStatusPARTIALSUCCESS PolicyStatus = "PARTIAL_SUCCESS"
	PolicyStatusSUCCESS        PolicyStatus = "SUCCESS"
)

// Defines values for PredefinedTransformationType.
const (
	Default               PredefinedTransformationType = "default"
	PasswordOnlyPlainText PredefinedTransformationType = "password_only_plain_text"
)

// Defines values for PublicConnectionConfigConnectionType.
const (
	PUBLIC PublicConnectionConfigConnectionType = "PUBLIC"
)

// Defines values for ScanStatus.
const (
	ScanStatusFAILED     ScanStatus = "FAILED"
	ScanStatusINPROGRESS ScanStatus = "IN_PROGRESS"
	ScanStatusSUCCESS    ScanStatus = "SUCCESS"
)

// Defines values for SecretStoreBehavior.
const (
	SecretStoreBehaviorSECRETSSOURCE SecretStoreBehavior = "SECRETS_SOURCE"
	SecretStoreBehaviorSECRETSTARGET SecretStoreBehavior = "SECRETS_TARGET"
)

// Defines values for SecretStoreInputState.
const (
	SecretStoreInputStateDISABLED SecretStoreInputState = "DISABLED"
	SecretStoreInputStateENABLED  SecretStoreInputState = "ENABLED"
)

// Defines values for SecretStoreOutputCreationDetails.
const (
	SecretStoreOutputCreationDetailsConnectCloudEnvironment SecretStoreOutputCreationDetails = "Connect Cloud Environment"
	SecretStoreOutputCreationDetailsSecretsHub              SecretStoreOutputCreationDetails = "Secrets Hub"
)

// Defines values for SecretStoreType.
const (
	AWSASM        SecretStoreType = "AWS_ASM"
	AZUREAKV      SecretStoreType = "AZURE_AKV"
	GCPGSM        SecretStoreType = "GCP_GSM"
	PAMPCLOUD     SecretStoreType = "PAM_PCLOUD"
	PAMSELFHOSTED SecretStoreType = "PAM_SELF_HOSTED"
)

// Defines values for SecretStoreWithReplicatedDataOutputCreationDetails.
const (
	SecretStoreWithReplicatedDataOutputCreationDetailsConnectCloudEnvironment SecretStoreWithReplicatedDataOutputCreationDetails = "Connect Cloud Environment"
	SecretStoreWithReplicatedDataOutputCreationDetailsSecretsHub              SecretStoreWithReplicatedDataOutputCreationDetails = "Secrets Hub"
)

// Defines values for State.
const (
	StateDELETING  State = "DELETING"
	StateDISABLED  State = "DISABLED"
	StateDISABLING State = "DISABLING"
	StateENABLED   State = "ENABLED"
	StateENABLING  State = "ENABLING"
	StateNONE      State = "NONE"
)

// Defines values for StateTransition.
const (
	FAILED     StateTransition = "FAILED"
	INPROGRESS StateTransition = "IN_PROGRESS"
	NONE       StateTransition = "NONE"
	SUCCEEDED  StateTransition = "SUCCEEDED"
)

// Defines values for Status.
const (
	ERROR Status = "ERROR"
	OK    Status = "OK"
)

// Defines values for VendorSubType.
const (
	AKV VendorSubType = "AKV"
	ASM VendorSubType = "ASM"
	GSM VendorSubType = "GSM"
)

// Defines values for VendorType.
const (
	AWS   VendorType = "AWS"
	AZURE VendorType = "AZURE"
	GCP   VendorType = "GCP"
)

// Defines values for ListAllSecretStoresApiSecretStoresGetParamsBehavior.
const (
	ListAllSecretStoresApiSecretStoresGetParamsBehaviorSECRETSSOURCE ListAllSecretStoresApiSecretStoresGetParamsBehavior = "SECRETS_SOURCE"
	ListAllSecretStoresApiSecretStoresGetParamsBehaviorSECRETSTARGET ListAllSecretStoresApiSecretStoresGetParamsBehavior = "SECRETS_TARGET"
)

// Defines values for PutApiSecretStoresStateJSONBodyAction.
const (
	PutApiSecretStoresStateJSONBodyActionDisable PutApiSecretStoresStateJSONBodyAction = "disable"
	PutApiSecretStoresStateJSONBodyActionEnable  PutApiSecretStoresStateJSONBodyAction = "enable"
)

// Defines values for PutApiSecretStoresStoreIdStateJSONBodyAction.
const (
	Disable PutApiSecretStoresStoreIdStateJSONBodyAction = "disable"
	Enable  PutApiSecretStoresStoreIdStateJSONBodyAction = "enable"
)

// AkvSecretVendorData defines model for AkvSecretVendorData.
type AkvSecretVendorData struct {
	// CreatedAt The date and time the secret was created in the secret store.
	CreatedAt *string `json:"createdAt,omitempty"`

	// Enabled Indicates whether the secret is enabled, as defined in Azure Key Vault.
	Enabled bool `json:"enabled"`

	// ExpiresAt The date the secret expires and can no longer be used, as defined in Azure Key Vault.
	ExpiresAt *string `json:"expiresAt,omitempty"`

	// LastRetrievedAt The last date and time the secret was retrieved from the secret store.
	LastRetrievedAt *string `json:"lastRetrievedAt,omitempty"`

	// NotBefore The date from which the secret is valid and can be used, as defined in Azure Key Vault.
	NotBefore *string `json:"notBefore,omitempty"`

	// ResourceGroupName The name of the resource group to which the Azure Key Vault belongs.
	ResourceGroupName *string `json:"resourceGroupName,omitempty"`

	// SubscriptionId The ID of the Azure subscription associated with the Azure Key Vault.
	SubscriptionId *string `json:"subscriptionId,omitempty"`

	// SubscriptionName The display name of the Azure subscription associated with the Azure Key Vault.
	SubscriptionName *string `json:"subscriptionName,omitempty"`

	// Tags The tags that are applied to the secret in the secret store.
	Tags *map[string]string `json:"tags,omitempty"`

	// UpdatedAt The date and time the secret was last updated.
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

// AsmSecretVendorData defines model for AsmSecretVendorData.
type AsmSecretVendorData struct {
	// AwsAccountId The AWS account ID where the secret is stored in
	AwsAccountId *string `json:"awsAccountId,omitempty"`

	// CreatedAt The date and time the secret was created in the secret store.
	CreatedAt *string `json:"createdAt,omitempty"`

	// KmsKeyId The ID of the encryption key used to encrypt the secret value in AWS Secrets Manager.
	KmsKeyId *string `json:"kmsKeyId,omitempty"`

	// LastRetrievedAt The last date and time the secret was retrieved from the secret store.
	LastRetrievedAt *string `json:"lastRetrievedAt,omitempty"`
	Region          *string `json:"region,omitempty"`

	// Tags The tags that are applied to the secret in the secret store.
	Tags *map[string]string `json:"tags,omitempty"`

	// UpdatedAt The date and time the secret was last updated.
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

// AuthenticationIdentities defines model for AuthenticationIdentities.
type AuthenticationIdentities struct {
	Aws *struct {
		// TenantRoleArn The Secrets Hub tenant role ARN
		TenantRoleArn *string `json:"tenantRoleArn,omitempty"`
	} `json:"aws,omitempty"`
}

// AwsAsmData defines model for AwsAsmData.
type AwsAsmData struct {
	// AccountAlias The alias of your AWS account
	AccountAlias string `json:"accountAlias"`

	// AccountId The 12-digit account ID of the AWS account that has the AWS Secrets Manager where you store secrets
	AccountId string `json:"accountId"`

	// RegionId The region ID where the AWS account is managed
	RegionId string `json:"regionId"`

	// RoleName The AWS role used to allow Secrets Hub to manage secrets in your AWS Secrets Manager
	RoleName string `json:"roleName"`
}

// AzureAkvData defines model for AzureAkvData.
type AzureAkvData struct {
	// AppClientDirectoryId The Azure directory/tenant ID where the application (user) for Secrets Hub was created
	AppClientDirectoryId openapi_types.UUID `json:"appClientDirectoryId"`

	// AppClientId A unique Application (client) ID assigned to Secrets Hub by Azure AD when the app was registered. Secrets Hub will use this ID to access the Azure Key Vault
	AppClientId openapi_types.UUID `json:"appClientId"`

	// AzureVaultUrl The URI used to access and get secrets stored in Azure Key Vault
	AzureVaultUrl string `json:"azureVaultUrl"`

	// ConnectionConfig The network access configuration set for your Azure Key Vault. Contact your Azure tenant admin to identify it
	ConnectionConfig AzureAkvData_ConnectionConfig `json:"connectionConfig"`

	// ResourceGroupName The Azure resource group name where the Azure Key Vault is stored
	ResourceGroupName *string `json:"resourceGroupName,omitempty"`

	// SubscriptionId The Azure subscription ID linked to the Azure Key Vault
	SubscriptionId *openapi_types.UUID `json:"subscriptionId,omitempty"`

	// SubscriptionName The Azure subscription name linked to the Azure Key Vault
	SubscriptionName *string `json:"subscriptionName,omitempty"`
}

// AzureAkvData_ConnectionConfig The network access configuration set for your Azure Key Vault. Contact your Azure tenant admin to identify it
type AzureAkvData_ConnectionConfig struct {
	union json.RawMessage
}

// ConnectionsTestOutput defines model for ConnectionsTestOutput.
type ConnectionsTestOutput struct {
	// Message A message containing extra information from the connection test
	Message *string `json:"message,omitempty"`

	// Status The connection test result
	Status Status `json:"status"`
}

// ConnectorConnectionConfig defines model for ConnectorConnectionConfig.
type ConnectorConnectionConfig struct {
	// Connectorpoolid The connector pool unique identifier used to connect PAM Self-Hosted and Secrets Hub.
	Connectorpoolid *ConnectorPoolId `json:"Connectorpoolid,omitempty"`

	// ConnectionType If your Azure Key Vault is not open to public access, choose CONNECTOR
	ConnectionType *ConnectorConnectionConfigConnectionType `json:"connectionType,omitempty"`

	// ConnectorId The connector unique identifier used to connect Azure Key Vault and Secrets Hub
	ConnectorId *ConnectorId `json:"connectorId,omitempty"`
}

// ConnectorConnectionConfigConnectionType If your Azure Key Vault is not open to public access, choose CONNECTOR
type ConnectorConnectionConfigConnectionType string

// ConnectorId The connector unique identifier used to connect Azure Key Vault and Secrets Hub
type ConnectorId = string

// ConnectorPoolId The connector pool unique identifier used to connect PAM Self-Hosted and Secrets Hub.
type ConnectorPoolId = openapi_types.UUID

// CreateAzureAkvData defines model for CreateAzureAkvData.
type CreateAzureAkvData struct {
	// AppClientDirectoryId The Azure directory/tenant ID where the application (user) for Secrets Hub was created
	AppClientDirectoryId openapi_types.UUID `json:"appClientDirectoryId"`

	// AppClientId A unique Application (client) ID assigned to Secrets Hub by Azure AD when the app was registered. Secrets Hub will use this ID to access the Azure Key Vault
	AppClientId openapi_types.UUID `json:"appClientId"`

	// AppClientSecret The user's password that will be used by Secrets Hub to access the Azure Key Vault.
	AppClientSecret *string `json:"appClientSecret,omitempty"`

	// AzureVaultUrl The URI used to access and get secrets stored in Azure Key Vault
	AzureVaultUrl string `json:"azureVaultUrl"`

	// ConnectionConfig The network access configuration set for your Azure Key Vault. Contact your Azure tenant admin to identify it
	ConnectionConfig CreateAzureAkvData_ConnectionConfig `json:"connectionConfig"`

	// ResourceGroupName The Azure resource group name where the Azure Key Vault is stored
	ResourceGroupName *string `json:"resourceGroupName,omitempty"`

	// SubscriptionId The Azure subscription ID linked to the Azure Key Vault
	SubscriptionId *openapi_types.UUID `json:"subscriptionId,omitempty"`

	// SubscriptionName The Azure subscription name linked to the Azure Key Vault
	SubscriptionName *string `json:"subscriptionName,omitempty"`
}

// CreateAzureAkvData_ConnectionConfig The network access configuration set for your Azure Key Vault. Contact your Azure tenant admin to identify it
type CreateAzureAkvData_ConnectionConfig struct {
	union json.RawMessage
}

// CreateSelfHostedSecretStoreData defines model for CreateSelfHostedSecretStoreData.
type CreateSelfHostedSecretStoreData struct {
	// Connectorpoolid The connector pool unique identifier used to connect PAM Self-Hosted and Secrets Hub.
	Connectorpoolid *ConnectorPoolId `json:"Connectorpoolid,omitempty"`

	// ConnectorId The connector unique identifier used to connect Azure Key Vault and Secrets Hub
	ConnectorId *ConnectorId `json:"connectorId,omitempty"`

	// Password The password of the user in PAM 'SecretsHub'
	Password *string `json:"password,omitempty"`

	// Url The URL of your PAM Self-Hosted PVWA, or the load balancer for the PVWA
	Url string `json:"url"`

	// UserName The user used for Secrets Hub to get secrets from PAM source. Should be 'SecretsHub'. This user should be created by REST API in PAM.
	UserName string `json:"userName"`
}

// DeletePolicyOutput defines model for DeletePolicyOutput.
type DeletePolicyOutput struct {
	Message string `json:"message"`
}

// EditAkvSecretStoreData defines model for EditAkvSecretStoreData.
type EditAkvSecretStoreData struct {
	// AppClientDirectoryId The Azure directory/tenant ID where the application (user) for Secrets Hub was created
	AppClientDirectoryId *openapi_types.UUID `json:"appClientDirectoryId,omitempty"`

	// AppClientId A unique Application (client) ID assigned to Secrets Hub by Azure AD when the app was registered. Secrets Hub will use this ID to access the Azure Key Vault
	AppClientId *openapi_types.UUID `json:"appClientId,omitempty"`

	// AppClientSecret The user's password that will be used by Secrets Hub to access the Azure Key Vault.
	AppClientSecret *string `json:"appClientSecret,omitempty"`

	// ConnectionConfig The network access configuration set for your Azure Key Vault. Contact your Azure tenant admin to identify it
	ConnectionConfig *EditAkvSecretStoreData_ConnectionConfig `json:"connectionConfig,omitempty"`

	// ResourceGroupName The Azure resource group name where the Azure Key Vault is stored
	ResourceGroupName *string `json:"resourceGroupName,omitempty"`

	// SubscriptionId The Azure subscription ID linked to the Azure Key Vault
	SubscriptionId *openapi_types.UUID `json:"subscriptionId,omitempty"`

	// SubscriptionName The Azure subscription name linked to the Azure Key Vault
	SubscriptionName *string `json:"subscriptionName,omitempty"`
}

// EditAkvSecretStoreData_ConnectionConfig The network access configuration set for your Azure Key Vault. Contact your Azure tenant admin to identify it
type EditAkvSecretStoreData_ConnectionConfig struct {
	union json.RawMessage
}

// EditAwsAsmData defines model for EditAwsAsmData.
type EditAwsAsmData struct {
	// AccountAlias The alias of your AWS account
	AccountAlias *string `json:"accountAlias,omitempty"`

	// RoleName The AWS role used to allow Secrets Hub to manage secrets in your AWS Secrets Manager
	RoleName *string `json:"roleName,omitempty"`
}

// EditGsmSecretStoreData defines model for EditGsmSecretStoreData.
type EditGsmSecretStoreData struct {
	// GcpPoolProviderId The GCP pool provider ID created for Secrets Hub to access the GCP Secret Manager
	GcpPoolProviderId *string `json:"gcpPoolProviderId,omitempty"`

	// GcpProjectName The name of the GCP project where the GCP Secret Manager is stored
	GcpProjectName *string `json:"gcpProjectName,omitempty"`

	// GcpWorkloadIdentityPoolId The GCP workload identity pool ID created for Secrets Hub to access the GCP Secret Manager
	GcpWorkloadIdentityPoolId *string `json:"gcpWorkloadIdentityPoolId,omitempty"`

	// ServiceAccountEmail The service account email created for Secrets Hub to access the GCP Secret Manager
	ServiceAccountEmail *string `json:"serviceAccountEmail,omitempty"`
}

// EditSecretStoreInputApi defines model for EditSecretStoreInputApi.
type EditSecretStoreInputApi struct {
	Data *EditSecretStoreInputApi_Data `json:"data,omitempty"`

	// Description A description of the secret store.
	Description *string `json:"description,omitempty"`

	// Name The secret store name.
	Name *string `json:"name,omitempty"`
}

// EditSecretStoreInputApi_Data defines model for EditSecretStoreInputApi.Data.
type EditSecretStoreInputApi_Data struct {
	union json.RawMessage
}

// EditSelfHostedSecretStoreData defines model for EditSelfHostedSecretStoreData.
type EditSelfHostedSecretStoreData struct {
	// ConnectorId The connector unique identifier used to connect Azure Key Vault and Secrets Hub
	ConnectorId *ConnectorId `json:"connectorId,omitempty"`

	// ConnectorPoolId The connector pool unique identifier used to connect PAM Self-Hosted and Secrets Hub.
	ConnectorPoolId *ConnectorPoolId `json:"connectorPoolId,omitempty"`

	// Password The password of the user in PAM 'SecretsHub'
	Password *string `json:"password,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	// Code An application-specific error code
	Code string `json:"code"`

	// Description Optional additional details of the specific error
	Description *string `json:"description,omitempty"`

	// Message A human-readable explanation specific to this occurrence of the problem
	Message string `json:"message"`
}

// ExtendedSecretOutput defines model for ExtendedSecretOutput.
type ExtendedSecretOutput struct {
	// DiscoveredAt The date and time that the secret was discovered by the Secrets Hub scan.
	DiscoveredAt string `json:"discoveredAt"`

	// Id The unique identifier of the secret in Secrets Hub (internal).
	Id string `json:"id"`

	// LastScannedAt The last date and time the secret was scanned by Secrets Hub.
	LastScannedAt string `json:"lastScannedAt"`

	// Name The name of the secret as defined in the secret store.
	Name *string `json:"name,omitempty"`

	// Onboarded Indicates whether the secret is onboarded to PAM.
	Onboarded *bool `json:"onboarded,omitempty"`

	// OriginId The unique identifier of the secret as defined in the secret store.
	OriginId string `json:"originId"`

	// StoreId The unique identifier of the secret store
	StoreId   SecretStoreIdString `json:"storeId"`
	StoreName *string             `json:"storeName,omitempty"`

	// VendorData Data related to the secret as defined in the cloud platform.
	VendorData ExtendedSecretOutput_VendorData `json:"vendorData"`

	// VendorSubType The subtype of the secret store where the secret was discovered.
	VendorSubType VendorSubType `json:"vendorSubType"`

	// VendorType The vendor type of the store where the secret was found.
	VendorType VendorType `json:"vendorType"`
}

// ExtendedSecretOutput_VendorData Data related to the secret as defined in the cloud platform.
type ExtendedSecretOutput_VendorData struct {
	union json.RawMessage
}

// ExternalStateChangeAction An enumeration.
type ExternalStateChangeAction string

// FilterId defines model for FilterId.
type FilterId struct {
	// Id The unique identifier of the filter
	Id string `json:"id"`
}

// FilterInput defines model for FilterInput.
type FilterInput struct {
	// Data Information about the secrets filter.
	Data PamSafeFilterData `json:"data"`

	// Type The secrets filter type
	Type FilterType `json:"type"`
}

// FilterOutput defines model for FilterOutput.
type FilterOutput struct {
	// CreatedAt The secrets filter creation date.
	CreatedAt string `json:"createdAt"`

	// CreatedBy The user who created the secrets filter.
	CreatedBy string `json:"createdBy"`

	// Data Information about the PAM Safe.
	Data PamSafeFilterData `json:"data"`

	// Id The unique identifier of the secrets filter.
	Id string `json:"id"`

	// Type The secrets filter type.
	Type FilterType `json:"type"`

	// UpdatedAt The last date the secrets filter was updated.
	UpdatedAt string `json:"updatedAt"`

	// UpdatedBy The last user to update the secrets filter.
	UpdatedBy string `json:"updatedBy"`
}

// FilterType An enumeration.
type FilterType string

// GcpGsmData defines model for GcpGsmData.
type GcpGsmData struct {
	// ConnectionConfig The network access configuration set for your GCP Secret Manager. Contact your GCP project admin to identify it
	ConnectionConfig PublicConnectionConfig `json:"connectionConfig"`

	// GcpPoolProviderId The GCP pool provider ID created for Secrets Hub to access the GCP Secret Manager
	GcpPoolProviderId string `json:"gcpPoolProviderId"`

	// GcpProjectName The name of the GCP project where the GCP Secret Manager is stored
	GcpProjectName string `json:"gcpProjectName"`

	// GcpProjectNumber The number of the GCP project where the GCP Secret Manager is stored
	GcpProjectNumber string `json:"gcpProjectNumber"`

	// GcpWorkloadIdentityPoolId The GCP workload identity pool ID created for Secrets Hub to access the GCP Secret Manager
	GcpWorkloadIdentityPoolId string `json:"gcpWorkloadIdentityPoolId"`

	// ServiceAccountEmail The service account email created for Secrets Hub to access the GCP Secret Manager
	ServiceAccountEmail string `json:"serviceAccountEmail"`
}

// GsmSecretVendorData defines model for GsmSecretVendorData.
type GsmSecretVendorData struct {
	// Annotations The annotations that are applied to the secret in external secret store.
	Annotations *map[string]string `json:"annotations,omitempty"`

	// CreatedAt The date and time the secret was created in the secret store.
	CreatedAt *string `json:"createdAt,omitempty"`

	// Enabled Indicates whether the secret is enabled in external secret store.
	Enabled *bool `json:"enabled,omitempty"`

	// ExpiresAt The date the secret expires and can no longer be used, as defined in external secret store.
	ExpiresAt *string `json:"expiresAt,omitempty"`

	// KmsKeyId The ID of the encryption key used to encrypt the secret value in the external secret store.
	KmsKeyId *string `json:"kmsKeyId,omitempty"`

	// NextRotationTime The time at which the secret is scheduled to be rotated by the external secret store.
	NextRotationTime *string `json:"nextRotationTime,omitempty"`

	// ProjectName The name of the Google Cloud project where the secret is stored.
	ProjectName *string `json:"projectName,omitempty"`

	// ProjectNumber The number of the Google Cloud project where the secret is stored.
	ProjectNumber *string `json:"projectNumber,omitempty"`

	// Region The region where the secret is stored in external secret store.
	Region *string `json:"region,omitempty"`

	// Replicas If the secret is being replicated, and to where.
	Replicas *[]struct {
		// Location us-west1
		Location *string `json:"location,omitempty"`
	} `json:"replicas,omitempty"`

	// ReplicationMethod The method used to replicate the secret in external secret store.
	ReplicationMethod *GsmSecretVendorDataReplicationMethod `json:"replicationMethod,omitempty"`

	// SecretEnabledVersions The number of versions of the secret that are enabled in external secret store.
	SecretEnabledVersions *int `json:"secretEnabledVersions,omitempty"`

	// SecretType The type of the secret stored in external secret store.
	SecretType *GsmSecretVendorDataSecretType `json:"secretType,omitempty"`

	// Tags The tags that are applied to the secret in the secret store.
	Tags *map[string]string `json:"tags,omitempty"`
}

// GsmSecretVendorDataReplicationMethod The method used to replicate the secret in external secret store.
type GsmSecretVendorDataReplicationMethod string

// GsmSecretVendorDataSecretType The type of the secret stored in external secret store.
type GsmSecretVendorDataSecretType string

// PamSafeFilterData defines model for PamSafeFilterData.
type PamSafeFilterData struct {
	// SafeName The Safe name as defined in PAM.
	SafeName string `json:"safeName"`
}

// PcloudSecretStoreData defines model for PcloudSecretStoreData.
type PcloudSecretStoreData struct {
	// Url The URL of your pCloud
	Url string `json:"url"`

	// UserName The user used for Secrets Hub to get secrets from PAM source. Should be 'SecretsHub'. This user should be created by REST API in PAM
	UserName string `json:"userName"`
}

// PolicyExtendedOutput defines model for PolicyExtendedOutput.
type PolicyExtendedOutput struct {
	// CreatedAt The policy creation date
	CreatedAt string `json:"createdAt"`

	// CreatedBy The creator of the policy.
	CreatedBy string `json:"createdBy"`

	// Description The policy description
	Description *string `json:"description,omitempty"`

	// Filter The filter that defines which secrets to sync from the source
	Filter *FilterOutput `json:"filter,omitempty"`

	// Id The unique identifier of the policy
	Id string `json:"id"`

	// Name The policy name
	Name string `json:"name"`

	// Source The secret store where the secrets are synced from
	Source *SecretStoreOutput `json:"source,omitempty"`

	// State The state of the policy
	State PolicyState `json:"state"`

	// Status The policy status
	Status PolicyStatusObject `json:"status"`

	// Target The secret store where the secrets are synced to
	Target *SecretStoreOutput `json:"target,omitempty"`

	// Transformation The transformation applied on the secrets
	Transformation *TransformationId `json:"transformation,omitempty"`

	// UpdatedAt The last date the policy was updated
	UpdatedAt string `json:"updatedAt"`

	// UpdatedBy The user who last updated the policy.
	UpdatedBy string `json:"updatedBy"`
}

// PolicyInput defines model for PolicyInput.
type PolicyInput struct {
	// Description The policy description
	Description *string `json:"description,omitempty"`

	// Filter The filter that defines which secrets to sync from the source
	Filter PolicyInput_Filter `json:"filter"`

	// Name The policy name
	Name string `json:"name"`

	// Source The secret store where the secrets are synced from
	Source SecretStoreId `json:"source"`

	// Target The secret store where the secrets are synced to
	Target SecretStoreId `json:"target"`

	// Transformation Choose whether to sync only the secret value or to sync the default secret value, which includes other PAM account properties.
	Transformation *PolicyPredefinedTransformationInput `json:"transformation,omitempty"`
}

// PolicyInput_Filter The filter that defines which secrets to sync from the source
type PolicyInput_Filter struct {
	union json.RawMessage
}

// PolicyListOutput defines model for PolicyListOutput.
type PolicyListOutput struct {
	// Count The amount of policies the tenant currently has
	Count *int `json:"count,omitempty"`

	// Policies The list of all defined policies
	Policies []PolicyListOutput_Policies_Item `json:"policies"`
}

// PolicyListOutput_Policies_Item defines model for PolicyListOutput.policies.Item.
type PolicyListOutput_Policies_Item struct {
	union json.RawMessage
}

// PolicyPredefinedTransformationInput defines model for PolicyPredefinedTransformationInput.
type PolicyPredefinedTransformationInput struct {
	// Predefined The predefined transformation type
	Predefined PredefinedTransformationType `json:"predefined"`
}

// PolicyRegularOutput defines model for PolicyRegularOutput.
type PolicyRegularOutput struct {
	// CreatedAt The policy creation date
	CreatedAt string `json:"createdAt"`

	// CreatedBy The creator of the policy
	CreatedBy string `json:"createdBy"`

	// Description The policy description
	Description *string `json:"description,omitempty"`

	// Filter The secrets filter that defines which secrets to sync from the source
	Filter FilterId `json:"filter"`

	// Id The unique identifier of the policy
	Id string `json:"id"`

	// Name The policy name
	Name string `json:"name"`

	// Source The secret store where the secrets are synced from
	Source SecretStoreId `json:"source"`

	// State The state of the given policy
	State PolicyShortState `json:"state"`

	// Target The secret store where the secrets are synced to
	Target SecretStoreId `json:"target"`

	// Transformation The transformation applied on the secrets
	Transformation *TransformationId `json:"transformation,omitempty"`

	// UpdatedAt The last date the policy was updated
	UpdatedAt string `json:"updatedAt"`

	// UpdatedBy The name of the latest person who updated the policy
	UpdatedBy string `json:"updatedBy"`
}

// PolicyShortState defines model for PolicyShortState.
type PolicyShortState struct {
	// Current The policy's current state
	Current State `json:"current"`
}

// PolicyState defines model for PolicyState.
type PolicyState struct {
	// Current The policy's current state
	Current State `json:"current"`

	// StateDetails The policy's transition state details
	StateDetails PolicyStateDetails `json:"stateDetails"`
}

// PolicyStateDetails defines model for PolicyStateDetails.
type PolicyStateDetails struct {
	// FromState The previous policy state
	FromState State `json:"fromState"`

	// Message A message regarding the transition of the state
	Message *string `json:"message,omitempty"`

	// Status The policy synchronization status
	Status StateTransition `json:"status"`

	// ToState The wanted policy state
	ToState State `json:"toState"`
}

// PolicyStatus An enumeration.
type PolicyStatus string

// PolicyStatusObject defines model for PolicyStatusObject.
type PolicyStatusObject struct {
	// Error A error description explaining why the synchronization failed
	Error *string `json:"error,omitempty"`

	// IsRunning Is the policy running
	IsRunning bool `json:"isRunning"`

	// LastRun The date of the last synchronization attempt
	LastRun *string `json:"lastRun,omitempty"`

	// LastSuccessTime The date of the last successful policy synchronization
	LastSuccessTime *string `json:"lastSuccessTime,omitempty"`

	// NextAttemptToSyncTime The date of the next policy synchronization attempt
	NextAttemptToSyncTime *string `json:"nextAttemptToSyncTime,omitempty"`

	// PolicyId The unique identifier of policy
	PolicyId string `json:"policyId"`

	// PolicyStatus The policy synchronization status
	PolicyStatus PolicyStatus `json:"policyStatus"`
}

// PredefinedTransformationType An enumeration.
type PredefinedTransformationType string

// PublicConnectionConfig defines model for PublicConnectionConfig.
type PublicConnectionConfig struct {
	// ConnectionType If your Azure Key Vault is open to public access, choose 'PUBLIC'
	ConnectionType *PublicConnectionConfigConnectionType `json:"connectionType,omitempty"`
}

// PublicConnectionConfigConnectionType If your Azure Key Vault is open to public access, choose 'PUBLIC'
type PublicConnectionConfigConnectionType string

// ScanListOutput defines model for ScanListOutput.
type ScanListOutput struct {
	Count *int         `json:"count,omitempty"`
	Scans []ScanOutput `json:"scans"`
}

// ScanOutput defines model for ScanOutput.
type ScanOutput struct {
	// CreatedBy The user who triggered the scan.
	CreatedBy string `json:"createdBy"`

	// FinishedAt The date and time the scan ended
	FinishedAt *string `json:"finishedAt,omitempty"`

	// Id The unique identifier of the scan
	Id string `json:"id"`

	// Message More information on the scan status.
	Message *string `json:"message,omitempty"`

	// Metadata Data related to the scan. For example, secret store ID
	Metadata map[string]interface{} `json:"metadata"`

	// StartedAt The date and time the scan started
	StartedAt string `json:"startedAt"`

	// Status The status of the scan.
	Status ScanStatus `json:"status"`
}

// ScanStatus An enumeration.
type ScanStatus string

// Scope defines model for Scope.
type Scope struct {
	SecretStoresIds []SecretStoreIdString `json:"secretStoresIds"`
}

// SecretListOutput defines model for SecretListOutput.
type SecretListOutput struct {
	// Count Number of secrets in the result set
	Count   *int                            `json:"count,omitempty"`
	Secrets []SecretListOutput_Secrets_Item `json:"secrets"`

	// TotalCount Number of secrets in all result sets
	TotalCount *int `json:"totalCount,omitempty"`
}

// SecretListOutput_Secrets_Item defines model for SecretListOutput.secrets.Item.
type SecretListOutput_Secrets_Item struct {
	union json.RawMessage
}

// SecretOutput defines model for SecretOutput.
type SecretOutput struct {
	// DiscoveredAt The date and time that the secret was discovered by the Secrets Hub scan.
	DiscoveredAt string `json:"discoveredAt"`

	// Id The unique identifier of the secret in Secrets Hub (internal).
	Id string `json:"id"`

	// Name The name of the secret as defined in the secret store.
	Name *string `json:"name,omitempty"`

	// OriginId The unique identifier of the secret as defined in the secret store.
	OriginId string `json:"originId"`

	// StoreId The unique identifier of the secret store
	StoreId   SecretStoreIdString `json:"storeId"`
	StoreName *string             `json:"storeName,omitempty"`

	// SyncedByCyberArk Indicates whether the secret has been synced by CyberArk. If not set, the status is unknown.
	SyncedByCyberArk *bool `json:"syncedByCyberArk"`

	// VendorSubType The subtype of the secret store where the secret was discovered.
	VendorSubType VendorSubType `json:"vendorSubType"`

	// VendorType The vendor type of the store where the secret was found in.
	VendorType VendorType `json:"vendorType"`
}

// SecretStoreBehavior An enumeration.
type SecretStoreBehavior string

// SecretStoreId defines model for SecretStoreId.
type SecretStoreId struct {
	// Id The unique identifier of the secret store
	Id SecretStoreIdString `json:"id"`
}

// SecretStoreIdString The unique identifier of the secret store
type SecretStoreIdString = string

// SecretStoreInput defines model for SecretStoreInput.
type SecretStoreInput struct {
	// Data The data of the secret store depends on the secret store type.
	Data SecretStoreInput_Data `json:"data"`

	// Description A description of the secret store.
	Description *string `json:"description,omitempty"`

	// Name The secret store name.
	Name string `json:"name"`

	// State The secret store state
	State *SecretStoreInputState `json:"state,omitempty"`

	// Type The type of the secret store.
	Type SecretStoreType `json:"type"`
}

// SecretStoreInput_Data The data of the secret store depends on the secret store type.
type SecretStoreInput_Data struct {
	union json.RawMessage
}

// SecretStoreInputState The secret store state
type SecretStoreInputState string

// SecretStoreOutput defines model for SecretStoreOutput.
type SecretStoreOutput struct {
	// Behaviors Whether the secret store is used as a source or a target. There can be only one source secret store per tenant.
	Behaviors []SecretStoreBehavior `json:"behaviors"`

	// CreatedAt The secret store creation date.
	CreatedAt string `json:"createdAt"`

	// CreatedBy The user who created the secret store.
	CreatedBy       string                            `json:"createdBy"`
	CreationDetails *SecretStoreOutputCreationDetails `json:"creationDetails,omitempty"`

	// Data The data of the secret store depends on the secret store type.
	Data SecretStoreOutput_Data `json:"data"`

	// Description A description of the secret store.
	Description *string `json:"description,omitempty"`

	// Id The unique identifier of the secret store
	Id string `json:"id"`

	// Name The secret store name.
	Name           string  `json:"name"`
	OrganizationId *string `json:"organizationId,omitempty"`

	// Type The type of secret store.
	Type SecretStoreType `json:"type"`

	// UpdatedAt The last date the secret store was updated
	UpdatedAt string `json:"updatedAt"`

	// UpdatedBy The last user to update the secret store.
	UpdatedBy string `json:"updatedBy"`
}

// SecretStoreOutputCreationDetails defines model for SecretStoreOutput.CreationDetails.
type SecretStoreOutputCreationDetails string

// SecretStoreOutput_Data The data of the secret store depends on the secret store type.
type SecretStoreOutput_Data struct {
	union json.RawMessage
}

// SecretStoreScanReplicaOutput defines model for SecretStoreScanReplicaOutput.
type SecretStoreScanReplicaOutput struct {
	// FinishedAt The date and time the scan ended
	FinishedAt *string `json:"finishedAt,omitempty"`

	// Id The unique identifier of the scan
	Id string `json:"id"`

	// Message More information on the scan status.
	Message *string `json:"message,omitempty"`

	// Status The status of the scan.
	Status ScanStatus `json:"status"`
}

// SecretStoreType An enumeration.
type SecretStoreType string

// SecretStoreWithReplicatedDataOutput defines model for SecretStoreWithReplicatedDataOutput.
type SecretStoreWithReplicatedDataOutput struct {
	// Behaviors Whether the secret store is used as a source or a target. There can be only one source secret store per tenant.
	Behaviors []SecretStoreBehavior `json:"behaviors"`

	// CreatedAt The secret store creation date.
	CreatedAt string `json:"createdAt"`

	// CreatedBy The user who created the secret store.
	CreatedBy       string                                              `json:"createdBy"`
	CreationDetails *SecretStoreWithReplicatedDataOutputCreationDetails `json:"creationDetails,omitempty"`

	// Data The data of the secret store depends on the secret store type.
	Data SecretStoreWithReplicatedDataOutput_Data `json:"data"`

	// Description A description of the secret store.
	Description *string `json:"description,omitempty"`

	// Id The unique identifier of the secret store
	Id string `json:"id"`

	// Name The secret store name.
	Name           string                        `json:"name"`
	OrganizationId *string                       `json:"organizationId,omitempty"`
	Scan           *SecretStoreScanReplicaOutput `json:"scan,omitempty"`

	// TotalPoliciesCount The total amount of policies in the secret store
	TotalPoliciesCount *int `json:"totalPoliciesCount,omitempty"`

	// TotalSecretsCount The total amount of secrets in the secret store
	TotalSecretsCount *int `json:"totalSecretsCount,omitempty"`

	// Type The type of secret store.
	Type SecretStoreType `json:"type"`

	// UpdatedAt The last date the secret store was updated
	UpdatedAt string `json:"updatedAt"`

	// UpdatedBy The last user to update the secret store.
	UpdatedBy string `json:"updatedBy"`
}

// SecretStoreWithReplicatedDataOutputCreationDetails defines model for SecretStoreWithReplicatedDataOutput.CreationDetails.
type SecretStoreWithReplicatedDataOutputCreationDetails string

// SecretStoreWithReplicatedDataOutput_Data The data of the secret store depends on the secret store type.
type SecretStoreWithReplicatedDataOutput_Data struct {
	union json.RawMessage
}

// SecretStoresWithReplicatedDataOutputList defines model for SecretStoresWithReplicatedDataOutputList.
type SecretStoresWithReplicatedDataOutputList struct {
	SecretStores []SecretStoreWithReplicatedDataOutput `json:"secretStores"`
}

// SecretsSource defines model for SecretsSource.
type SecretsSource struct {
	// PamType The tenant PAM type
	PamType *string `json:"pamType,omitempty"`
}

// SelfHostedSecretStoreData defines model for SelfHostedSecretStoreData.
type SelfHostedSecretStoreData struct {
	// Connectorpoolid The connector pool unique identifier used to connect PAM Self-Hosted and Secrets Hub.
	Connectorpoolid *ConnectorPoolId `json:"Connectorpoolid,omitempty"`

	// ConnectorId The connector unique identifier used to connect Azure Key Vault and Secrets Hub
	ConnectorId *ConnectorId `json:"connectorId,omitempty"`

	// Url The URL of your PAM Self-Hosted PVWA, or the load balancer for the PVWA
	Url string `json:"url"`

	// UserName The user used for Secrets Hub to get secrets from PAM source. Should be 'SecretsHub'. This user should be created by REST API in PAM
	UserName string `json:"userName"`
}

// State An enumeration.
type State string

// StateChangeInput defines model for StateChangeInput.
type StateChangeInput struct {
	// Action The requested state for the policy
	Action ExternalStateChangeAction `json:"action"`
}

// StateTransition An enumeration.
type StateTransition string

// Status An enumeration.
type Status string

// Syncsettings defines model for Syncsettings.
type Syncsettings struct {
	// SecretValidity The amount of days the secret will be valid after sync
	SecretValidity *float32 `json:"secretValidity,omitempty"`
}

// TenantConfigurationOutput defines model for TenantConfigurationOutput.
type TenantConfigurationOutput struct {
	AuthenticationIdentities AuthenticationIdentities `json:"authenticationIdentities"`
	SecretsSource            SecretsSource            `json:"secretsSource"`
	SyncSettings             Syncsettings             `json:"syncSettings"`
}

// TenantInfoOutput defines model for TenantInfoOutput.
type TenantInfoOutput struct {
	// TenantPamType The tenant PAM type
	TenantPamType string `json:"tenantPamType"`

	// TenantRoleArn The Secrets Hub tenant role ARN
	TenantRoleArn string `json:"tenantRoleArn"`
}

// TransformationId defines model for TransformationId.
type TransformationId struct {
	// Id The identifier of the transformation
	Id string `json:"id"`
}

// TriggerScanInputBody defines model for TriggerScanInputBody.
type TriggerScanInputBody struct {
	Scope Scope `json:"scope"`
}

// TriggerScanOutput defines model for TriggerScanOutput.
type TriggerScanOutput struct {
	ScanIds []string `json:"scanIds"`
}

// VendorSubType An enumeration.
type VendorSubType string

// VendorType An enumeration.
type VendorType string

// PatchApiConfigurationJSONBody defines parameters for PatchApiConfiguration.
type PatchApiConfigurationJSONBody struct {
	SyncSettings *Syncsettings `json:"syncSettings,omitempty"`
}

// ListPoliciesApiPoliciesGetParams defines parameters for ListPoliciesApiPoliciesGet.
type ListPoliciesApiPoliciesGetParams struct {
	// Filter Filter the Policies. For example, by Safe name
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// Projection Data representation method. Can be EXTEND, REGULAR, METADATA. Default is REGULAR if param is not set.
	Projection *string `form:"projection,omitempty" json:"projection,omitempty"`
}

// PolicyCreateApiPoliciesPostJSONBody defines parameters for PolicyCreateApiPoliciesPost.
type PolicyCreateApiPoliciesPostJSONBody = PolicyInput

// PolicyGetApiPoliciesPolicyIdGetParams defines parameters for PolicyGetApiPoliciesPolicyIdGet.
type PolicyGetApiPoliciesPolicyIdGetParams struct {
	// Projection Data representation method. Can be EXTEND or REGULAR.
	Projection string `form:"projection" json:"projection"`
}

// SetPolicyStateApiPoliciesPolicyIdStatePutJSONBody defines parameters for SetPolicyStateApiPoliciesPolicyIdStatePut.
type SetPolicyStateApiPoliciesPolicyIdStatePutJSONBody = StateChangeInput

// TriggerScanApiScanDefinitionsTypeIdScanPostJSONBody defines parameters for TriggerScanApiScanDefinitionsTypeIdScanPost.
type TriggerScanApiScanDefinitionsTypeIdScanPostJSONBody = TriggerScanInputBody

// TriggerScanApiScanDefinitionsTypeIdScanPostParams defines parameters for TriggerScanApiScanDefinitionsTypeIdScanPost.
type TriggerScanApiScanDefinitionsTypeIdScanPostParams struct {
	Accept string `json:"Accept"`
}

// GetScansApiScansGetParams defines parameters for GetScansApiScansGet.
type GetScansApiScansGetParams struct {
	Accept string `json:"Accept"`
}

// ListAllSecretStoresApiSecretStoresGetParams defines parameters for ListAllSecretStoresApiSecretStoresGet.
type ListAllSecretStoresApiSecretStoresGetParams struct {
	// Behavior Filter by secret store type. Retrieve only source/target secret stores.
	Behavior ListAllSecretStoresApiSecretStoresGetParamsBehavior `form:"behavior" json:"behavior"`

	// Filter Filter the secret stores by filter condition expression.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`
}

// ListAllSecretStoresApiSecretStoresGetParamsBehavior defines parameters for ListAllSecretStoresApiSecretStoresGet.
type ListAllSecretStoresApiSecretStoresGetParamsBehavior string

// CreateSecretStoreApiSecretStoresPostJSONBody defines parameters for CreateSecretStoreApiSecretStoresPost.
type CreateSecretStoreApiSecretStoresPostJSONBody = SecretStoreInput

// PutApiSecretStoresStateJSONBody defines parameters for PutApiSecretStoresState.
type PutApiSecretStoresStateJSONBody struct {
	Action         PutApiSecretStoresStateJSONBodyAction `json:"action"`
	SecretStoreIds []SecretStoreIdString                 `json:"secretStoreIds"`
}

// PutApiSecretStoresStateJSONBodyAction defines parameters for PutApiSecretStoresState.
type PutApiSecretStoresStateJSONBodyAction string

// UpdateSecretStoreApiSecretStoresStoreIdPatchJSONBody defines parameters for UpdateSecretStoreApiSecretStoresStoreIdPatch.
type UpdateSecretStoreApiSecretStoresStoreIdPatchJSONBody = EditSecretStoreInputApi

// CreateSecretsFilterApiSecretStoresStoreIdFiltersPostJSONBody defines parameters for CreateSecretsFilterApiSecretStoresStoreIdFiltersPost.
type CreateSecretsFilterApiSecretStoresStoreIdFiltersPostJSONBody = FilterInput

// PutApiSecretStoresStoreIdStateJSONBody defines parameters for PutApiSecretStoresStoreIdState.
type PutApiSecretStoresStoreIdStateJSONBody struct {
	Action *PutApiSecretStoresStoreIdStateJSONBodyAction `json:"action,omitempty"`
}

// PutApiSecretStoresStoreIdStateJSONBodyAction defines parameters for PutApiSecretStoresStoreIdState.
type PutApiSecretStoresStoreIdStateJSONBodyAction string

// ListSecretsApiSecretsGetParams defines parameters for ListSecretsApiSecretsGet.
type ListSecretsApiSecretsGetParams struct {
	// Projection Data representation method. Can be EXTEND or REGULAR.
	Projection *string `form:"projection,omitempty" json:"projection,omitempty"`

	// Offset The number of secrets to skip before starting to collect the result set. Can be used only once in a REST API call
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The number of secrets to return. Can be used only once in a REST API call
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Sort The order by which to sort the results. By default, the results are sorted using field: storeName. The default order is ascending (ASC).
	Sort *string `form:"sort,omitempty" json:"sort,omitempty"`

	// Filter Filter the returned data using one or more conditions.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`
}

// PatchApiConfigurationJSONRequestBody defines body for PatchApiConfiguration for application/json ContentType.
type PatchApiConfigurationJSONRequestBody PatchApiConfigurationJSONBody

// PolicyCreateApiPoliciesPostJSONRequestBody defines body for PolicyCreateApiPoliciesPost for application/json ContentType.
type PolicyCreateApiPoliciesPostJSONRequestBody = PolicyCreateApiPoliciesPostJSONBody

// SetPolicyStateApiPoliciesPolicyIdStatePutJSONRequestBody defines body for SetPolicyStateApiPoliciesPolicyIdStatePut for application/json ContentType.
type SetPolicyStateApiPoliciesPolicyIdStatePutJSONRequestBody = SetPolicyStateApiPoliciesPolicyIdStatePutJSONBody

// TriggerScanApiScanDefinitionsTypeIdScanPostJSONRequestBody defines body for TriggerScanApiScanDefinitionsTypeIdScanPost for application/json ContentType.
type TriggerScanApiScanDefinitionsTypeIdScanPostJSONRequestBody = TriggerScanApiScanDefinitionsTypeIdScanPostJSONBody

// CreateSecretStoreApiSecretStoresPostJSONRequestBody defines body for CreateSecretStoreApiSecretStoresPost for application/json ContentType.
type CreateSecretStoreApiSecretStoresPostJSONRequestBody = CreateSecretStoreApiSecretStoresPostJSONBody

// PutApiSecretStoresStateJSONRequestBody defines body for PutApiSecretStoresState for application/json ContentType.
type PutApiSecretStoresStateJSONRequestBody PutApiSecretStoresStateJSONBody

// UpdateSecretStoreApiSecretStoresStoreIdPatchJSONRequestBody defines body for UpdateSecretStoreApiSecretStoresStoreIdPatch for application/json ContentType.
type UpdateSecretStoreApiSecretStoresStoreIdPatchJSONRequestBody = UpdateSecretStoreApiSecretStoresStoreIdPatchJSONBody

// CreateSecretsFilterApiSecretStoresStoreIdFiltersPostJSONRequestBody defines body for CreateSecretsFilterApiSecretStoresStoreIdFiltersPost for application/json ContentType.
type CreateSecretsFilterApiSecretStoresStoreIdFiltersPostJSONRequestBody = CreateSecretsFilterApiSecretStoresStoreIdFiltersPostJSONBody

// PutApiSecretStoresStoreIdStateJSONRequestBody defines body for PutApiSecretStoresStoreIdState for application/json ContentType.
type PutApiSecretStoresStoreIdStateJSONRequestBody PutApiSecretStoresStoreIdStateJSONBody

// AsConnectorConnectionConfig returns the union data inside the AzureAkvData_ConnectionConfig as a ConnectorConnectionConfig
func (t AzureAkvData_ConnectionConfig) AsConnectorConnectionConfig() (ConnectorConnectionConfig, error) {
	var body ConnectorConnectionConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromConnectorConnectionConfig overwrites any union data inside the AzureAkvData_ConnectionConfig as the provided ConnectorConnectionConfig
func (t *AzureAkvData_ConnectionConfig) FromConnectorConnectionConfig(v ConnectorConnectionConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeConnectorConnectionConfig performs a merge with any union data inside the AzureAkvData_ConnectionConfig, using the provided ConnectorConnectionConfig
func (t *AzureAkvData_ConnectionConfig) MergeConnectorConnectionConfig(v ConnectorConnectionConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicConnectionConfig returns the union data inside the AzureAkvData_ConnectionConfig as a PublicConnectionConfig
func (t AzureAkvData_ConnectionConfig) AsPublicConnectionConfig() (PublicConnectionConfig, error) {
	var body PublicConnectionConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicConnectionConfig overwrites any union data inside the AzureAkvData_ConnectionConfig as the provided PublicConnectionConfig
func (t *AzureAkvData_ConnectionConfig) FromPublicConnectionConfig(v PublicConnectionConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicConnectionConfig performs a merge with any union data inside the AzureAkvData_ConnectionConfig, using the provided PublicConnectionConfig
func (t *AzureAkvData_ConnectionConfig) MergePublicConnectionConfig(v PublicConnectionConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t AzureAkvData_ConnectionConfig) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AzureAkvData_ConnectionConfig) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsConnectorConnectionConfig returns the union data inside the CreateAzureAkvData_ConnectionConfig as a ConnectorConnectionConfig
func (t CreateAzureAkvData_ConnectionConfig) AsConnectorConnectionConfig() (ConnectorConnectionConfig, error) {
	var body ConnectorConnectionConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromConnectorConnectionConfig overwrites any union data inside the CreateAzureAkvData_ConnectionConfig as the provided ConnectorConnectionConfig
func (t *CreateAzureAkvData_ConnectionConfig) FromConnectorConnectionConfig(v ConnectorConnectionConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeConnectorConnectionConfig performs a merge with any union data inside the CreateAzureAkvData_ConnectionConfig, using the provided ConnectorConnectionConfig
func (t *CreateAzureAkvData_ConnectionConfig) MergeConnectorConnectionConfig(v ConnectorConnectionConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicConnectionConfig returns the union data inside the CreateAzureAkvData_ConnectionConfig as a PublicConnectionConfig
func (t CreateAzureAkvData_ConnectionConfig) AsPublicConnectionConfig() (PublicConnectionConfig, error) {
	var body PublicConnectionConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicConnectionConfig overwrites any union data inside the CreateAzureAkvData_ConnectionConfig as the provided PublicConnectionConfig
func (t *CreateAzureAkvData_ConnectionConfig) FromPublicConnectionConfig(v PublicConnectionConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicConnectionConfig performs a merge with any union data inside the CreateAzureAkvData_ConnectionConfig, using the provided PublicConnectionConfig
func (t *CreateAzureAkvData_ConnectionConfig) MergePublicConnectionConfig(v PublicConnectionConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t CreateAzureAkvData_ConnectionConfig) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CreateAzureAkvData_ConnectionConfig) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsConnectorConnectionConfig returns the union data inside the EditAkvSecretStoreData_ConnectionConfig as a ConnectorConnectionConfig
func (t EditAkvSecretStoreData_ConnectionConfig) AsConnectorConnectionConfig() (ConnectorConnectionConfig, error) {
	var body ConnectorConnectionConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromConnectorConnectionConfig overwrites any union data inside the EditAkvSecretStoreData_ConnectionConfig as the provided ConnectorConnectionConfig
func (t *EditAkvSecretStoreData_ConnectionConfig) FromConnectorConnectionConfig(v ConnectorConnectionConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeConnectorConnectionConfig performs a merge with any union data inside the EditAkvSecretStoreData_ConnectionConfig, using the provided ConnectorConnectionConfig
func (t *EditAkvSecretStoreData_ConnectionConfig) MergeConnectorConnectionConfig(v ConnectorConnectionConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicConnectionConfig returns the union data inside the EditAkvSecretStoreData_ConnectionConfig as a PublicConnectionConfig
func (t EditAkvSecretStoreData_ConnectionConfig) AsPublicConnectionConfig() (PublicConnectionConfig, error) {
	var body PublicConnectionConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicConnectionConfig overwrites any union data inside the EditAkvSecretStoreData_ConnectionConfig as the provided PublicConnectionConfig
func (t *EditAkvSecretStoreData_ConnectionConfig) FromPublicConnectionConfig(v PublicConnectionConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicConnectionConfig performs a merge with any union data inside the EditAkvSecretStoreData_ConnectionConfig, using the provided PublicConnectionConfig
func (t *EditAkvSecretStoreData_ConnectionConfig) MergePublicConnectionConfig(v PublicConnectionConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EditAkvSecretStoreData_ConnectionConfig) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EditAkvSecretStoreData_ConnectionConfig) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsEditAwsAsmData returns the union data inside the EditSecretStoreInputApi_Data as a EditAwsAsmData
func (t EditSecretStoreInputApi_Data) AsEditAwsAsmData() (EditAwsAsmData, error) {
	var body EditAwsAsmData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEditAwsAsmData overwrites any union data inside the EditSecretStoreInputApi_Data as the provided EditAwsAsmData
func (t *EditSecretStoreInputApi_Data) FromEditAwsAsmData(v EditAwsAsmData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEditAwsAsmData performs a merge with any union data inside the EditSecretStoreInputApi_Data, using the provided EditAwsAsmData
func (t *EditSecretStoreInputApi_Data) MergeEditAwsAsmData(v EditAwsAsmData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEditAkvSecretStoreData returns the union data inside the EditSecretStoreInputApi_Data as a EditAkvSecretStoreData
func (t EditSecretStoreInputApi_Data) AsEditAkvSecretStoreData() (EditAkvSecretStoreData, error) {
	var body EditAkvSecretStoreData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEditAkvSecretStoreData overwrites any union data inside the EditSecretStoreInputApi_Data as the provided EditAkvSecretStoreData
func (t *EditSecretStoreInputApi_Data) FromEditAkvSecretStoreData(v EditAkvSecretStoreData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEditAkvSecretStoreData performs a merge with any union data inside the EditSecretStoreInputApi_Data, using the provided EditAkvSecretStoreData
func (t *EditSecretStoreInputApi_Data) MergeEditAkvSecretStoreData(v EditAkvSecretStoreData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEditSelfHostedSecretStoreData returns the union data inside the EditSecretStoreInputApi_Data as a EditSelfHostedSecretStoreData
func (t EditSecretStoreInputApi_Data) AsEditSelfHostedSecretStoreData() (EditSelfHostedSecretStoreData, error) {
	var body EditSelfHostedSecretStoreData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEditSelfHostedSecretStoreData overwrites any union data inside the EditSecretStoreInputApi_Data as the provided EditSelfHostedSecretStoreData
func (t *EditSecretStoreInputApi_Data) FromEditSelfHostedSecretStoreData(v EditSelfHostedSecretStoreData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEditSelfHostedSecretStoreData performs a merge with any union data inside the EditSecretStoreInputApi_Data, using the provided EditSelfHostedSecretStoreData
func (t *EditSecretStoreInputApi_Data) MergeEditSelfHostedSecretStoreData(v EditSelfHostedSecretStoreData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEditGsmSecretStoreData returns the union data inside the EditSecretStoreInputApi_Data as a EditGsmSecretStoreData
func (t EditSecretStoreInputApi_Data) AsEditGsmSecretStoreData() (EditGsmSecretStoreData, error) {
	var body EditGsmSecretStoreData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEditGsmSecretStoreData overwrites any union data inside the EditSecretStoreInputApi_Data as the provided EditGsmSecretStoreData
func (t *EditSecretStoreInputApi_Data) FromEditGsmSecretStoreData(v EditGsmSecretStoreData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEditGsmSecretStoreData performs a merge with any union data inside the EditSecretStoreInputApi_Data, using the provided EditGsmSecretStoreData
func (t *EditSecretStoreInputApi_Data) MergeEditGsmSecretStoreData(v EditGsmSecretStoreData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EditSecretStoreInputApi_Data) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EditSecretStoreInputApi_Data) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAsmSecretVendorData returns the union data inside the ExtendedSecretOutput_VendorData as a AsmSecretVendorData
func (t ExtendedSecretOutput_VendorData) AsAsmSecretVendorData() (AsmSecretVendorData, error) {
	var body AsmSecretVendorData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAsmSecretVendorData overwrites any union data inside the ExtendedSecretOutput_VendorData as the provided AsmSecretVendorData
func (t *ExtendedSecretOutput_VendorData) FromAsmSecretVendorData(v AsmSecretVendorData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAsmSecretVendorData performs a merge with any union data inside the ExtendedSecretOutput_VendorData, using the provided AsmSecretVendorData
func (t *ExtendedSecretOutput_VendorData) MergeAsmSecretVendorData(v AsmSecretVendorData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAkvSecretVendorData returns the union data inside the ExtendedSecretOutput_VendorData as a AkvSecretVendorData
func (t ExtendedSecretOutput_VendorData) AsAkvSecretVendorData() (AkvSecretVendorData, error) {
	var body AkvSecretVendorData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAkvSecretVendorData overwrites any union data inside the ExtendedSecretOutput_VendorData as the provided AkvSecretVendorData
func (t *ExtendedSecretOutput_VendorData) FromAkvSecretVendorData(v AkvSecretVendorData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAkvSecretVendorData performs a merge with any union data inside the ExtendedSecretOutput_VendorData, using the provided AkvSecretVendorData
func (t *ExtendedSecretOutput_VendorData) MergeAkvSecretVendorData(v AkvSecretVendorData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsGsmSecretVendorData returns the union data inside the ExtendedSecretOutput_VendorData as a GsmSecretVendorData
func (t ExtendedSecretOutput_VendorData) AsGsmSecretVendorData() (GsmSecretVendorData, error) {
	var body GsmSecretVendorData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromGsmSecretVendorData overwrites any union data inside the ExtendedSecretOutput_VendorData as the provided GsmSecretVendorData
func (t *ExtendedSecretOutput_VendorData) FromGsmSecretVendorData(v GsmSecretVendorData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeGsmSecretVendorData performs a merge with any union data inside the ExtendedSecretOutput_VendorData, using the provided GsmSecretVendorData
func (t *ExtendedSecretOutput_VendorData) MergeGsmSecretVendorData(v GsmSecretVendorData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ExtendedSecretOutput_VendorData) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ExtendedSecretOutput_VendorData) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsFilterInput returns the union data inside the PolicyInput_Filter as a FilterInput
func (t PolicyInput_Filter) AsFilterInput() (FilterInput, error) {
	var body FilterInput
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromFilterInput overwrites any union data inside the PolicyInput_Filter as the provided FilterInput
func (t *PolicyInput_Filter) FromFilterInput(v FilterInput) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeFilterInput performs a merge with any union data inside the PolicyInput_Filter, using the provided FilterInput
func (t *PolicyInput_Filter) MergeFilterInput(v FilterInput) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsFilterId returns the union data inside the PolicyInput_Filter as a FilterId
func (t PolicyInput_Filter) AsFilterId() (FilterId, error) {
	var body FilterId
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromFilterId overwrites any union data inside the PolicyInput_Filter as the provided FilterId
func (t *PolicyInput_Filter) FromFilterId(v FilterId) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeFilterId performs a merge with any union data inside the PolicyInput_Filter, using the provided FilterId
func (t *PolicyInput_Filter) MergeFilterId(v FilterId) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t PolicyInput_Filter) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *PolicyInput_Filter) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsPolicyRegularOutput returns the union data inside the PolicyListOutput_Policies_Item as a PolicyRegularOutput
func (t PolicyListOutput_Policies_Item) AsPolicyRegularOutput() (PolicyRegularOutput, error) {
	var body PolicyRegularOutput
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPolicyRegularOutput overwrites any union data inside the PolicyListOutput_Policies_Item as the provided PolicyRegularOutput
func (t *PolicyListOutput_Policies_Item) FromPolicyRegularOutput(v PolicyRegularOutput) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePolicyRegularOutput performs a merge with any union data inside the PolicyListOutput_Policies_Item, using the provided PolicyRegularOutput
func (t *PolicyListOutput_Policies_Item) MergePolicyRegularOutput(v PolicyRegularOutput) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPolicyExtendedOutput returns the union data inside the PolicyListOutput_Policies_Item as a PolicyExtendedOutput
func (t PolicyListOutput_Policies_Item) AsPolicyExtendedOutput() (PolicyExtendedOutput, error) {
	var body PolicyExtendedOutput
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPolicyExtendedOutput overwrites any union data inside the PolicyListOutput_Policies_Item as the provided PolicyExtendedOutput
func (t *PolicyListOutput_Policies_Item) FromPolicyExtendedOutput(v PolicyExtendedOutput) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePolicyExtendedOutput performs a merge with any union data inside the PolicyListOutput_Policies_Item, using the provided PolicyExtendedOutput
func (t *PolicyListOutput_Policies_Item) MergePolicyExtendedOutput(v PolicyExtendedOutput) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t PolicyListOutput_Policies_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *PolicyListOutput_Policies_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsExtendedSecretOutput returns the union data inside the SecretListOutput_Secrets_Item as a ExtendedSecretOutput
func (t SecretListOutput_Secrets_Item) AsExtendedSecretOutput() (ExtendedSecretOutput, error) {
	var body ExtendedSecretOutput
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromExtendedSecretOutput overwrites any union data inside the SecretListOutput_Secrets_Item as the provided ExtendedSecretOutput
func (t *SecretListOutput_Secrets_Item) FromExtendedSecretOutput(v ExtendedSecretOutput) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeExtendedSecretOutput performs a merge with any union data inside the SecretListOutput_Secrets_Item, using the provided ExtendedSecretOutput
func (t *SecretListOutput_Secrets_Item) MergeExtendedSecretOutput(v ExtendedSecretOutput) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSecretOutput returns the union data inside the SecretListOutput_Secrets_Item as a SecretOutput
func (t SecretListOutput_Secrets_Item) AsSecretOutput() (SecretOutput, error) {
	var body SecretOutput
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSecretOutput overwrites any union data inside the SecretListOutput_Secrets_Item as the provided SecretOutput
func (t *SecretListOutput_Secrets_Item) FromSecretOutput(v SecretOutput) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSecretOutput performs a merge with any union data inside the SecretListOutput_Secrets_Item, using the provided SecretOutput
func (t *SecretListOutput_Secrets_Item) MergeSecretOutput(v SecretOutput) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t SecretListOutput_Secrets_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SecretListOutput_Secrets_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAwsAsmData returns the union data inside the SecretStoreInput_Data as a AwsAsmData
func (t SecretStoreInput_Data) AsAwsAsmData() (AwsAsmData, error) {
	var body AwsAsmData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAwsAsmData overwrites any union data inside the SecretStoreInput_Data as the provided AwsAsmData
func (t *SecretStoreInput_Data) FromAwsAsmData(v AwsAsmData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAwsAsmData performs a merge with any union data inside the SecretStoreInput_Data, using the provided AwsAsmData
func (t *SecretStoreInput_Data) MergeAwsAsmData(v AwsAsmData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateAzureAkvData returns the union data inside the SecretStoreInput_Data as a CreateAzureAkvData
func (t SecretStoreInput_Data) AsCreateAzureAkvData() (CreateAzureAkvData, error) {
	var body CreateAzureAkvData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateAzureAkvData overwrites any union data inside the SecretStoreInput_Data as the provided CreateAzureAkvData
func (t *SecretStoreInput_Data) FromCreateAzureAkvData(v CreateAzureAkvData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateAzureAkvData performs a merge with any union data inside the SecretStoreInput_Data, using the provided CreateAzureAkvData
func (t *SecretStoreInput_Data) MergeCreateAzureAkvData(v CreateAzureAkvData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateSelfHostedSecretStoreData returns the union data inside the SecretStoreInput_Data as a CreateSelfHostedSecretStoreData
func (t SecretStoreInput_Data) AsCreateSelfHostedSecretStoreData() (CreateSelfHostedSecretStoreData, error) {
	var body CreateSelfHostedSecretStoreData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateSelfHostedSecretStoreData overwrites any union data inside the SecretStoreInput_Data as the provided CreateSelfHostedSecretStoreData
func (t *SecretStoreInput_Data) FromCreateSelfHostedSecretStoreData(v CreateSelfHostedSecretStoreData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateSelfHostedSecretStoreData performs a merge with any union data inside the SecretStoreInput_Data, using the provided CreateSelfHostedSecretStoreData
func (t *SecretStoreInput_Data) MergeCreateSelfHostedSecretStoreData(v CreateSelfHostedSecretStoreData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsGcpGsmData returns the union data inside the SecretStoreInput_Data as a GcpGsmData
func (t SecretStoreInput_Data) AsGcpGsmData() (GcpGsmData, error) {
	var body GcpGsmData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromGcpGsmData overwrites any union data inside the SecretStoreInput_Data as the provided GcpGsmData
func (t *SecretStoreInput_Data) FromGcpGsmData(v GcpGsmData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeGcpGsmData performs a merge with any union data inside the SecretStoreInput_Data, using the provided GcpGsmData
func (t *SecretStoreInput_Data) MergeGcpGsmData(v GcpGsmData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t SecretStoreInput_Data) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SecretStoreInput_Data) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAwsAsmData returns the union data inside the SecretStoreOutput_Data as a AwsAsmData
func (t SecretStoreOutput_Data) AsAwsAsmData() (AwsAsmData, error) {
	var body AwsAsmData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAwsAsmData overwrites any union data inside the SecretStoreOutput_Data as the provided AwsAsmData
func (t *SecretStoreOutput_Data) FromAwsAsmData(v AwsAsmData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAwsAsmData performs a merge with any union data inside the SecretStoreOutput_Data, using the provided AwsAsmData
func (t *SecretStoreOutput_Data) MergeAwsAsmData(v AwsAsmData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAzureAkvData returns the union data inside the SecretStoreOutput_Data as a AzureAkvData
func (t SecretStoreOutput_Data) AsAzureAkvData() (AzureAkvData, error) {
	var body AzureAkvData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAzureAkvData overwrites any union data inside the SecretStoreOutput_Data as the provided AzureAkvData
func (t *SecretStoreOutput_Data) FromAzureAkvData(v AzureAkvData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAzureAkvData performs a merge with any union data inside the SecretStoreOutput_Data, using the provided AzureAkvData
func (t *SecretStoreOutput_Data) MergeAzureAkvData(v AzureAkvData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsGcpGsmData returns the union data inside the SecretStoreOutput_Data as a GcpGsmData
func (t SecretStoreOutput_Data) AsGcpGsmData() (GcpGsmData, error) {
	var body GcpGsmData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromGcpGsmData overwrites any union data inside the SecretStoreOutput_Data as the provided GcpGsmData
func (t *SecretStoreOutput_Data) FromGcpGsmData(v GcpGsmData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeGcpGsmData performs a merge with any union data inside the SecretStoreOutput_Data, using the provided GcpGsmData
func (t *SecretStoreOutput_Data) MergeGcpGsmData(v GcpGsmData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPcloudSecretStoreData returns the union data inside the SecretStoreOutput_Data as a PcloudSecretStoreData
func (t SecretStoreOutput_Data) AsPcloudSecretStoreData() (PcloudSecretStoreData, error) {
	var body PcloudSecretStoreData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPcloudSecretStoreData overwrites any union data inside the SecretStoreOutput_Data as the provided PcloudSecretStoreData
func (t *SecretStoreOutput_Data) FromPcloudSecretStoreData(v PcloudSecretStoreData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePcloudSecretStoreData performs a merge with any union data inside the SecretStoreOutput_Data, using the provided PcloudSecretStoreData
func (t *SecretStoreOutput_Data) MergePcloudSecretStoreData(v PcloudSecretStoreData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSelfHostedSecretStoreData returns the union data inside the SecretStoreOutput_Data as a SelfHostedSecretStoreData
func (t SecretStoreOutput_Data) AsSelfHostedSecretStoreData() (SelfHostedSecretStoreData, error) {
	var body SelfHostedSecretStoreData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSelfHostedSecretStoreData overwrites any union data inside the SecretStoreOutput_Data as the provided SelfHostedSecretStoreData
func (t *SecretStoreOutput_Data) FromSelfHostedSecretStoreData(v SelfHostedSecretStoreData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSelfHostedSecretStoreData performs a merge with any union data inside the SecretStoreOutput_Data, using the provided SelfHostedSecretStoreData
func (t *SecretStoreOutput_Data) MergeSelfHostedSecretStoreData(v SelfHostedSecretStoreData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t SecretStoreOutput_Data) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SecretStoreOutput_Data) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAwsAsmData returns the union data inside the SecretStoreWithReplicatedDataOutput_Data as a AwsAsmData
func (t SecretStoreWithReplicatedDataOutput_Data) AsAwsAsmData() (AwsAsmData, error) {
	var body AwsAsmData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAwsAsmData overwrites any union data inside the SecretStoreWithReplicatedDataOutput_Data as the provided AwsAsmData
func (t *SecretStoreWithReplicatedDataOutput_Data) FromAwsAsmData(v AwsAsmData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAwsAsmData performs a merge with any union data inside the SecretStoreWithReplicatedDataOutput_Data, using the provided AwsAsmData
func (t *SecretStoreWithReplicatedDataOutput_Data) MergeAwsAsmData(v AwsAsmData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAzureAkvData returns the union data inside the SecretStoreWithReplicatedDataOutput_Data as a AzureAkvData
func (t SecretStoreWithReplicatedDataOutput_Data) AsAzureAkvData() (AzureAkvData, error) {
	var body AzureAkvData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAzureAkvData overwrites any union data inside the SecretStoreWithReplicatedDataOutput_Data as the provided AzureAkvData
func (t *SecretStoreWithReplicatedDataOutput_Data) FromAzureAkvData(v AzureAkvData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAzureAkvData performs a merge with any union data inside the SecretStoreWithReplicatedDataOutput_Data, using the provided AzureAkvData
func (t *SecretStoreWithReplicatedDataOutput_Data) MergeAzureAkvData(v AzureAkvData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsGcpGsmData returns the union data inside the SecretStoreWithReplicatedDataOutput_Data as a GcpGsmData
func (t SecretStoreWithReplicatedDataOutput_Data) AsGcpGsmData() (GcpGsmData, error) {
	var body GcpGsmData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromGcpGsmData overwrites any union data inside the SecretStoreWithReplicatedDataOutput_Data as the provided GcpGsmData
func (t *SecretStoreWithReplicatedDataOutput_Data) FromGcpGsmData(v GcpGsmData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeGcpGsmData performs a merge with any union data inside the SecretStoreWithReplicatedDataOutput_Data, using the provided GcpGsmData
func (t *SecretStoreWithReplicatedDataOutput_Data) MergeGcpGsmData(v GcpGsmData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPcloudSecretStoreData returns the union data inside the SecretStoreWithReplicatedDataOutput_Data as a PcloudSecretStoreData
func (t SecretStoreWithReplicatedDataOutput_Data) AsPcloudSecretStoreData() (PcloudSecretStoreData, error) {
	var body PcloudSecretStoreData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPcloudSecretStoreData overwrites any union data inside the SecretStoreWithReplicatedDataOutput_Data as the provided PcloudSecretStoreData
func (t *SecretStoreWithReplicatedDataOutput_Data) FromPcloudSecretStoreData(v PcloudSecretStoreData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePcloudSecretStoreData performs a merge with any union data inside the SecretStoreWithReplicatedDataOutput_Data, using the provided PcloudSecretStoreData
func (t *SecretStoreWithReplicatedDataOutput_Data) MergePcloudSecretStoreData(v PcloudSecretStoreData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSelfHostedSecretStoreData returns the union data inside the SecretStoreWithReplicatedDataOutput_Data as a SelfHostedSecretStoreData
func (t SecretStoreWithReplicatedDataOutput_Data) AsSelfHostedSecretStoreData() (SelfHostedSecretStoreData, error) {
	var body SelfHostedSecretStoreData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSelfHostedSecretStoreData overwrites any union data inside the SecretStoreWithReplicatedDataOutput_Data as the provided SelfHostedSecretStoreData
func (t *SecretStoreWithReplicatedDataOutput_Data) FromSelfHostedSecretStoreData(v SelfHostedSecretStoreData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSelfHostedSecretStoreData performs a merge with any union data inside the SecretStoreWithReplicatedDataOutput_Data, using the provided SelfHostedSecretStoreData
func (t *SecretStoreWithReplicatedDataOutput_Data) MergeSelfHostedSecretStoreData(v SelfHostedSecretStoreData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t SecretStoreWithReplicatedDataOutput_Data) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SecretStoreWithReplicatedDataOutput_Data) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
